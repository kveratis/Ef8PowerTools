// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using System;
using System.Data;
using System.Linq;
using Ef8PowerTools.Data.Models;

namespace Ef8PowerTools.Data.Models
{
    public partial class SummaContext
    {

        [DbFunction("CheckDisplayEntityPortalType", "dbo")]
        public static bool? CheckDisplayEntityPortalType(int? ProgramID, string ProgramFunctionName)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckInsurance", "dbo")]
        public IQueryable<CheckInsuranceResult> CheckInsurance(int? ProgramID, int? PatientID)
        {
            return FromExpression(() => CheckInsurance(ProgramID, PatientID));
        }

        [DbFunction("CheckTriageMandatoryFields_Akili", "dbo")]
        public static string CheckTriageMandatoryFields_Akili(int? SRID, int? ProgramID, int? PatientID)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V10", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V10(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V11", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V11(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V12", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V12(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V13", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V13(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V14", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V14(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V15", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V15(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V2", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V2(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V3", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V3(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V4", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V4(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V5", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V5(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V6", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V6(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V7", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V7(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V8", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V8(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_BioMarin_V9", "dbo")]
        public static string CheckTriageMandatoryFields_BioMarin_V9(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_Celltrion", "dbo")]
        public static string CheckTriageMandatoryFields_Celltrion(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType, string SRTypeShort)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_MedImmuneSPP", "dbo")]
        public static string CheckTriageMandatoryFields_MedImmuneSPP(int? SRID, int? ProgramID, string VendorName)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_MedImmuneSPP_V1", "dbo")]
        public static string CheckTriageMandatoryFields_MedImmuneSPP_V1(int? SRID, int? ProgramID, string VendorName, string VendorType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_0711", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_0711(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_v1", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_v1(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_v1_old", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_v1_old(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V10", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V10(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V11", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V11(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V12", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V12(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V13", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V13(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V14", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V14(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V2", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V2(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V3", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V3(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V4", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V4(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V5", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V5(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V6", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V6(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V7", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V7(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V8", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V8(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V9", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V9(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOpsumit_V9_backup", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOpsumit_V9_backup(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayOPSYNVI_V14", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayOPSYNVI_V14(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_old", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_old(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_old1", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_old1(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_v1", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_v1(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_v1_old", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_v1_old(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V10", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V10(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V2", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V2(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V3", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V3(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V4", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V4(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V5", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V5(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V6", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V6(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V7", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V7(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V8", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V8(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayTracleer_V9", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayTracleer_V9(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V10", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V10(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V10_test", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V10_test(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V11", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V11(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V12", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V12(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V2", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V2(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V3", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V3(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V4", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V4(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V5", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V5(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V5_test", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V5_test(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V6", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V6(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V6_test", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V6_test(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V7", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V7(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V8", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V8(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_PathwayUptravi_V9", "dbo")]
        public static string CheckTriageMandatoryFields_PathwayUptravi_V9(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_RareWood", "dbo")]
        public static string CheckTriageMandatoryFields_RareWood(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_Ruconest", "dbo")]
        public static string CheckTriageMandatoryFields_Ruconest(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("CheckTriageMandatoryFields_RuconestFG", "dbo")]
        public static string CheckTriageMandatoryFields_RuconestFG(int? SRID, int? ProgramID, int? PatientID, string DrugName)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("ComputeRelativeDate", "dbo")]
        public static DateOnly? ComputeRelativeDate(string relativeDateString, string delimiter)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("ConvertESTToUTCDate", "dbo")]
        public static DateTime? ConvertESTToUTCDate(DateTime? EST_Date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("ConvertPSTToUTCDate", "dbo")]
        public static DateTime? ConvertPSTToUTCDate(DateTime? PST_Date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("ConvertUTCToESTDate", "dbo")]
        public static DateTime? ConvertUTCToESTDate(DateTime? UTC_Date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("ConvertUTCToESTDate_DBServer", "dbo")]
        public static DateTime? ConvertUTCToESTDate_DBServer(DateTime? UTC_Date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("ConvertUTCToPSTDate", "dbo")]
        public static DateTime? ConvertUTCToPSTDate(DateTime? UTC_Date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("fn_Construct_MailingNumber", "dbo")]
        public static int? fn_Construct_MailingNumber(int? ServiceRequestID, int? MaxMailingID, int? FuncCount)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("fn_WorkTime", "dbo")]
        public static long? fn_WorkTime(DateTime? StartDate, DateTime? FinishDate)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("FormatPhoneNumber", "dbo")]
        public static string FormatPhoneNumber(string PhoneNumber)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("get_week_end", "dbo")]
        public static DateTime? get_week_end(DateTime? date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("get_week_start", "dbo")]
        public static DateTime? get_week_start(DateTime? date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("get_weekday_end", "dbo")]
        public static DateTime? get_weekday_end(byte? weekday, DateTime? date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetAge", "dbo")]
        public static int? GetAge(DateTime? RefDate, DateTime? Birthdate)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetAgeInYearDay", "dbo")]
        public IQueryable<GetAgeInYearDayResult> GetAgeInYearDay(DateOnly? dob)
        {
            return FromExpression(() => GetAgeInYearDay(dob));
        }

        [DbFunction("GetAgewithMonth", "dbo")]
        public static decimal? GetAgewithMonth(DateOnly? curDate, DateOnly? DOB)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetAllAssignedTo", "dbo")]
        public static string GetAllAssignedTo(int? SRID)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetClinicDataForEmail", "dbo")]
        public static string GetClinicDataForEmail(int? SRID, int? ProgramID, string ClinicDataForm, string ClinicDataTab)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetClinicDataForEmail_V2", "dbo")]
        public static string GetClinicDataForEmail_V2(int? SRID, int? ProgramID, string ClinicDataForm, string ClinicDataTab)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetDatebyAgeandMonth", "dbo")]
        public static DateOnly? GetDatebyAgeandMonth(DateOnly? curDate, int? ageyear, int? ageMonth)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetDatebyWeeknumberandwdInMonth", "dbo")]
        public static DateOnly? GetDatebyWeeknumberandwdInMonth(DateOnly? d, int? n, int? dw)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetDynamicDataValue", "dbo")]
        public static string GetDynamicDataValue(int? SRID, int? ProgramID, string FieldName, string FunctionName, string DataType)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetExtendedTriageRecord_MedImmuneSPP", "dbo")]
        public IQueryable<GetExtendedTriageRecord_MedImmuneSPPResult> GetExtendedTriageRecord_MedImmuneSPP(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName)
        {
            return FromExpression(() => GetExtendedTriageRecord_MedImmuneSPP(SRID, ProgramID, PatientID, VendorName, DrugName));
        }

        [DbFunction("GetExtendedTriageRecord_MedImmuneSPP_V2", "dbo")]
        public IQueryable<GetExtendedTriageRecord_MedImmuneSPP_V2Result> GetExtendedTriageRecord_MedImmuneSPP_V2(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName)
        {
            return FromExpression(() => GetExtendedTriageRecord_MedImmuneSPP_V2(SRID, ProgramID, PatientID, VendorName, DrugName));
        }

        [DbFunction("GetExtendedTriageRecord_PathwayOpsumit", "dbo")]
        public IQueryable<GetExtendedTriageRecord_PathwayOpsumitResult> GetExtendedTriageRecord_PathwayOpsumit(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            return FromExpression(() => GetExtendedTriageRecord_PathwayOpsumit(SRID, ProgramID, PatientID, VendorName, DrugName, TriagePayerType));
        }

        [DbFunction("GetExtendedTriageRecord_PathwayTracleer", "dbo")]
        public IQueryable<GetExtendedTriageRecord_PathwayTracleerResult> GetExtendedTriageRecord_PathwayTracleer(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            return FromExpression(() => GetExtendedTriageRecord_PathwayTracleer(SRID, ProgramID, PatientID, VendorName, DrugName, TriagePayerType));
        }

        [DbFunction("GetExtendedTriageRecord_PathwayUptravi", "dbo")]
        public IQueryable<GetExtendedTriageRecord_PathwayUptraviResult> GetExtendedTriageRecord_PathwayUptravi(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            return FromExpression(() => GetExtendedTriageRecord_PathwayUptravi(SRID, ProgramID, PatientID, VendorName, DrugName, TriagePayerType));
        }

        [DbFunction("GetExtendedTriageRecord_PathwayUptravi_testsudha", "dbo")]
        public IQueryable<GetExtendedTriageRecord_PathwayUptravi_testsudhaResult> GetExtendedTriageRecord_PathwayUptravi_testsudha(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType, int? ContactID)
        {
            return FromExpression(() => GetExtendedTriageRecord_PathwayUptravi_testsudha(SRID, ProgramID, PatientID, VendorName, DrugName, TriagePayerType, ContactID));
        }

        [DbFunction("GetExtendedTriageRecord_PathwayUptravi_V2", "dbo")]
        public IQueryable<GetExtendedTriageRecord_PathwayUptravi_V2Result> GetExtendedTriageRecord_PathwayUptravi_V2(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            return FromExpression(() => GetExtendedTriageRecord_PathwayUptravi_V2(SRID, ProgramID, PatientID, VendorName, DrugName, TriagePayerType));
        }

        [DbFunction("GetExtendedTriageRecord_PathwayVentavis", "dbo")]
        public IQueryable<GetExtendedTriageRecord_PathwayVentavisResult> GetExtendedTriageRecord_PathwayVentavis(int? SRID, int? ProgramID, int? PatientID, string VendorName, string DrugName, string TriagePayerType)
        {
            return FromExpression(() => GetExtendedTriageRecord_PathwayVentavis(SRID, ProgramID, PatientID, VendorName, DrugName, TriagePayerType));
        }

        [DbFunction("GetMedicalHistory", "dbo")]
        public IQueryable<GetMedicalHistoryResult> GetMedicalHistory(int? ProgramID, int? PatientID)
        {
            return FromExpression(() => GetMedicalHistory(ProgramID, PatientID));
        }

        [DbFunction("GetMessagesCount", "dbo")]
        public static int? GetMessagesCount(int? ProgramID)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetNameFromEntityType", "dbo")]
        public static string GetNameFromEntityType(int? ProgramId, string EntityType, int? FieldId, string FieldName)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetNextBusinessDay", "dbo")]
        public static DateOnly? GetNextBusinessDay(DateOnly? beginDate, int? skipBusinessDays)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetOrgNames", "dbo")]
        public static string GetOrgNames(int? SRID)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetPreviousBusinessDay", "dbo")]
        public static DateOnly? GetPreviousBusinessDay(DateOnly? beginDate, int? skipBusinessDays)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetSRManagementResult_ishitaTest", "dbo")]
        public IQueryable<GetSRManagementResult_ishitaTestResult> GetSRManagementResult_ishitaTest(int? programID, DateTime? StartDate, DateTime? EndDate, int? ServiceRequestID, string SR_Status, int? PatientID, string PatientName, string PrimaryPayer, string SecondaryPayer, int? PhysicianID, string PhysicianName, string SRType, string SRSubType, string AssignedTo, string DrugName, int? UserGroupID, DateOnly? NextInjectionDate)
        {
            return FromExpression(() => GetSRManagementResult_ishitaTest(programID, StartDate, EndDate, ServiceRequestID, SR_Status, PatientID, PatientName, PrimaryPayer, SecondaryPayer, PhysicianID, PhysicianName, SRType, SRSubType, AssignedTo, DrugName, UserGroupID, NextInjectionDate));
        }

        [DbFunction("GetWorkDays", "dbo")]
        public static int? GetWorkDays(DateOnly? beginDate, DateOnly? endDate)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetWorkHours", "dbo")]
        public static decimal? GetWorkHours(int? programID, DateTime? beginDate, DateTime? endDate)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetWorkHours_Decimal", "dbo")]
        public static decimal? GetWorkHours_Decimal(int? programID, DateTime? beginDate, DateTime? endDate)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetWorkHours_DecimalInString", "dbo")]
        public static decimal? GetWorkHours_DecimalInString(int? programID, DateTime? beginDate, DateTime? endDate)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("GetWorkHours_Table", "dbo")]
        public IQueryable<GetWorkHours_TableResult> GetWorkHours_Table(int? programID, DateTime? beginDate, DateTime? endDate)
        {
            return FromExpression(() => GetWorkHours_Table(programID, beginDate, endDate));
        }

        [DbFunction("IsDateInDST", "dbo")]
        public static bool? IsDateInDST(DateTime? date, bool? isUTCDate)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("IsDateWorkDay", "dbo")]
        public static bool? IsDateWorkDay(DateOnly? date)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("IsUSAddress", "dbo")]
        public static bool? IsUSAddress(string stateorzip)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("IsValidMedicareID", "dbo")]
        public static bool? IsValidMedicareID(string MedicareID)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("LTR_GetDenialReason", "dbo")]
        public static string LTR_GetDenialReason(int? Code)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("RemoveNonAlphaNumericCharacters", "dbo")]
        public static string RemoveNonAlphaNumericCharacters(string Temp)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("SplitString", "dbo")]
        public IQueryable<SplitStringResult> SplitString(string content, string delimiter)
        {
            return FromExpression(() => SplitString(content, delimiter));
        }

        [DbFunction("StartOfWeek", "dbo")]
        public static DateOnly? StartOfWeek(DateOnly? d)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("StringCleanSpace", "dbo")]
        public static string StringCleanSpace(string SearchStr)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        [DbFunction("USWM_GetProgramID", "dbo")]
        public IQueryable<USWM_GetProgramIDResult> USWM_GetProgramID(int? ProgramID)
        {
            return FromExpression(() => USWM_GetProgramID(ProgramID));
        }

        [DbFunction("WeekNumberInMonth", "dbo")]
        public static int? WeekNumberInMonth(DateOnly? d)
        {
            throw new NotSupportedException("This method can only be called from Entity Framework Core queries");
        }

        protected void OnModelCreatingGeneratedFunctions(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CheckInsuranceResult>().HasNoKey();
            modelBuilder.Entity<GetAgeInYearDayResult>().HasNoKey();
            modelBuilder.Entity<GetExtendedTriageRecord_MedImmuneSPPResult>().HasNoKey();
            modelBuilder.Entity<GetExtendedTriageRecord_MedImmuneSPP_V2Result>().HasNoKey();
            modelBuilder.Entity<GetExtendedTriageRecord_PathwayOpsumitResult>().HasNoKey();
            modelBuilder.Entity<GetExtendedTriageRecord_PathwayTracleerResult>().HasNoKey();
            modelBuilder.Entity<GetExtendedTriageRecord_PathwayUptraviResult>().HasNoKey();
            modelBuilder.Entity<GetExtendedTriageRecord_PathwayUptravi_testsudhaResult>().HasNoKey();
            modelBuilder.Entity<GetExtendedTriageRecord_PathwayUptravi_V2Result>().HasNoKey();
            modelBuilder.Entity<GetExtendedTriageRecord_PathwayVentavisResult>().HasNoKey();
            modelBuilder.Entity<GetMedicalHistoryResult>().HasNoKey();
            modelBuilder.Entity<GetSRManagementResult_ishitaTestResult>().HasNoKey();
            modelBuilder.Entity<GetWorkHours_TableResult>().HasNoKey();
            modelBuilder.Entity<SplitStringResult>().HasNoKey();
            modelBuilder.Entity<USWM_GetProgramIDResult>().HasNoKey();
        }
    }
}
