// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class BenefitInvestigationConfiguration : IEntityTypeConfiguration<BenefitInvestigation>
    {
        public void Configure(EntityTypeBuilder<BenefitInvestigation> entity)
        {
            entity.ToTable("BenefitInvestigation");

            entity.HasIndex(e => new { e.PatientInsuranceId, e.Deleted }, "PatientInsuranceID_Deleted");

            entity.Property(e => e.BenefitInvestigationId).HasColumnName("BenefitInvestigationID");
            entity.Property(e => e.BenefitInvestionType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ExternalId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Message)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.PatientInsuranceId).HasColumnName("PatientInsuranceID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ResponseTypeCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");

            entity.HasOne(d => d.PatientInsurance).WithMany(p => p.BenefitInvestigations)
                .HasForeignKey(d => d.PatientInsuranceId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BenefitInvestigation_PatientInsurance");

            entity.HasOne(d => d.ServiceRequest).WithMany(p => p.BenefitInvestigations)
                .HasForeignKey(d => d.ServiceRequestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BenefitInvestigation_ServiceRequests");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<BenefitInvestigation> entity);
    }
}
