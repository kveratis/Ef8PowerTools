// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class CareCycleScheduleConfiguration : IEntityTypeConfiguration<CareCycleSchedule>
    {
        public void Configure(EntityTypeBuilder<CareCycleSchedule> entity)
        {
            entity.ToTable("CareCycleSchedule", tb => tb.HasTrigger("TR_CareCycleSchedule_Audit"));

            entity.HasIndex(e => new { e.ProgramId, e.Deleted }, "ProgramIDInclude");

            entity.Property(e => e.CareCycleScheduleId).HasColumnName("CareCycleScheduleID");
            entity.Property(e => e.CareCycleId).HasColumnName("CareCycleID");
            entity.Property(e => e.Comment)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Deleted).HasDefaultValue(false);
            entity.Property(e => e.FirstScheduleDate).HasColumnType("datetime");
            entity.Property(e => e.IsRepeat).HasDefaultValue(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ReasonForScheduleChange)
                .HasMaxLength(2500)
                .IsUnicode(false);
            entity.Property(e => e.SchEndDate)
                .HasColumnType("datetime")
                .HasColumnName("Sch_EndDate");
            entity.Property(e => e.SchEndOccurrence)
                .HasDefaultValue(0)
                .HasColumnName("Sch_EndOccurrence");
            entity.Property(e => e.SchInterval).HasColumnName("Sch_Interval");
            entity.Property(e => e.SchMonthOption)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Sch_MonthOption");
            entity.Property(e => e.SchRepeatEnd)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Sch_RepeatEnd");
            entity.Property(e => e.SchRepeatSubType)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("Sch_RepeatSubType");
            entity.Property(e => e.SchRepeatType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Sch_RepeatType");
            entity.Property(e => e.SchWeekDayOption)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Sch_WeekDayOption");
            entity.Property(e => e.SrsubType)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SRSubType");
            entity.Property(e => e.Srtype)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SRType");
            entity.Property(e => e.StartDate).HasColumnType("datetime");
            entity.Property(e => e.Summary)
                .HasMaxLength(250)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CareCycleSchedule> entity);
    }
}
