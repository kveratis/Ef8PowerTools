// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class WorkflowProgramFieldConfiguration : IEntityTypeConfiguration<WorkflowProgramField>
    {
        public void Configure(EntityTypeBuilder<WorkflowProgramField> entity)
        {
            entity.HasKey(e => e.ProgramFieldId).HasName("Pk_ProgramQuestions_ProgramQuestionID");

            entity.ToTable(tb => tb.HasComment("Field configuration specific to a given program"));

            entity.Property(e => e.ProgramFieldId)
                .ValueGeneratedNever()
                .HasComment("The primary key")
                .HasColumnName("ProgramFieldID");
            entity.Property(e => e.ConditionalProgramFieldId).HasComment("Indicates that the question can only be displayed based on the ConditionalValue from the given program field id.");
            entity.Property(e => e.ConditionalResponseOption).HasComment("The conditional value of a response option to be used for display when the ConditionalProgramFieldId is specified");
            entity.Property(e => e.ConditionalSrsubType)
                .HasComment("The service request sub type to use for conditional display where the lookup name is SR_SUB_TYPES")
                .HasColumnName("ConditionalSRSubType");
            entity.Property(e => e.ConditionalValue)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("The conditional value of a response text to be used for display when the ConditionalProgramFieldId is specified");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Createdby)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CssClass)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DynamicDataListId).HasColumnName("DynamicDataListID");
            entity.Property(e => e.FieldId)
                .HasComment("The field id")
                .HasColumnName("FieldID");
            entity.Property(e => e.FieldLabel)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasComment("The field display label");
            entity.Property(e => e.FieldName)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasComment("The field name of the the field to present data for");
            entity.Property(e => e.FieldPlaceHolder)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("The text to display in the input place holder attribute");
            entity.Property(e => e.FieldTag).IsUnicode(false);
            entity.Property(e => e.IsActive).HasComment("Active flag");
            entity.Property(e => e.IsReadOnly).HasComment("Read only flag");
            entity.Property(e => e.IsRequired).HasComment("Required flag");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedby)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramWorkflowStep).HasComment("The program workflow step in for which the field is to be displayed where the lookup name is WORKFLOW_STEPS");
            entity.Property(e => e.RequiredFieldMessage)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.ResponseOptionKey).HasComment("The lookup to be used to populate a list of options for the field");
            entity.Property(e => e.Sequence).HasComment("The field display sequence");
            entity.Property(e => e.TableName)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasComment("The table name of the table to present data for");
            entity.Property(e => e.WhereClause)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.WorkflowId).HasColumnName("WorkflowID");

            entity.HasOne(d => d.ConditionalProgramField).WithMany(p => p.InverseConditionalProgramField)
                .HasForeignKey(d => d.ConditionalProgramFieldId)
                .HasConstraintName("FK_WorkflowProgramFields_ConditionalField");

            entity.HasOne(d => d.ConditionalResponseOptionNavigation).WithMany(p => p.WorkflowProgramFieldConditionalResponseOptionNavigations)
                .HasForeignKey(d => d.ConditionalResponseOption)
                .HasConstraintName("FK_WorkflowProgramFields_LookupItems_ResponseOption");

            entity.HasOne(d => d.ConditionalSrsubTypeNavigation).WithMany(p => p.WorkflowProgramFieldConditionalSrsubTypeNavigations)
                .HasForeignKey(d => d.ConditionalSrsubType)
                .HasConstraintName("FK_WorkflowProgramFields_WorkflowLookupItems_ConditionalValue");

            entity.HasOne(d => d.Field).WithMany(p => p.WorkflowProgramFields)
                .HasForeignKey(d => d.FieldId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WorkflowProgramFields_Fields");

            entity.HasOne(d => d.ProgramWorkflowStepNavigation).WithMany(p => p.WorkflowProgramFieldProgramWorkflowStepNavigations)
                .HasForeignKey(d => d.ProgramWorkflowStep)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WorkflowProgramFields_LookupItems_ProgramWorkflowStep");

            entity.HasOne(d => d.ResponseOptionKeyNavigation).WithMany(p => p.WorkflowProgramFields)
                .HasForeignKey(d => d.ResponseOptionKey)
                .HasConstraintName("FK_WorkflowProgramFields_WorkflowLookup_ResponseOptionKey");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WorkflowProgramField> entity);
    }
}
