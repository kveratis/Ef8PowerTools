// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrTypeActivityConfiguration : IEntityTypeConfiguration<SrTypeActivity>
    {
        public void Configure(EntityTypeBuilder<SrTypeActivity> entity)
        {
            entity.HasKey(e => e.SrTypeActivityId).HasName("PK_SR_TypeActivityList");

            entity.ToTable("SR_TypeActivity");

            entity.HasIndex(e => new { e.ProgramId, e.Active, e.Deleted }, "ProgramID_Active_Deleted_Includes");

            entity.HasIndex(e => new { e.SrActivityListId, e.ProgramId, e.Active }, "SR_ActivityListID_ProgramID_Active_Includes");

            entity.Property(e => e.SrTypeActivityId).HasColumnName("SR_TypeActivityID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("mhu");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.SortOrder).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.SrActivityListId).HasColumnName("SR_ActivityListID");
            entity.Property(e => e.SrTypeListId).HasColumnName("SR_TypeListID");

            entity.HasOne(d => d.SrActivityList).WithMany(p => p.SrTypeActivities)
                .HasForeignKey(d => d.SrActivityListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_TypeActivity_SR_ActivityList");

            entity.HasOne(d => d.SrTypeList).WithMany(p => p.SrTypeActivities)
                .HasForeignKey(d => d.SrTypeListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_TypeActivity_SR_TypeList");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrTypeActivity> entity);
    }
}
