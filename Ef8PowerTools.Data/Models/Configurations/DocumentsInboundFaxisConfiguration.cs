// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DocumentsInboundFaxisConfiguration : IEntityTypeConfiguration<DocumentsInboundFaxis>
    {
        public void Configure(EntityTypeBuilder<DocumentsInboundFaxis> entity)
        {
            entity.HasKey(e => e.DocumentsInboundFaxId);

            entity.ToTable("Documents_InboundFaxes");

            entity.HasIndex(e => new { e.DocumentsFaxQueueId, e.GroupName, e.ProcessedDate }, "Documents_FaxQueueID_GroupName_ProcessedDate_Includes");

            entity.HasIndex(e => new { e.DocumentsFaxQueueId, e.Status }, "IX_Documents_InboundFaxes_QID");

            entity.Property(e => e.DocumentsInboundFaxId).HasColumnName("Documents_InboundFaxID");
            entity.Property(e => e.DirectFaxDate).HasColumnType("datetime");
            entity.Property(e => e.DirectFaxId).HasColumnName("DirectFaxID");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.DocumentStorageId).HasColumnName("DocumentStorageID");
            entity.Property(e => e.DocumentStorageType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DocumentsFaxQueueId).HasColumnName("Documents_FaxQueueID");
            entity.Property(e => e.FaxBy)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.FaxNumber)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.FaxTo)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.GroupMissingPageNumbers)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.GroupName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.GroupPageNumbers)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.NumberofPages)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.OcrExtractStatus)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OCR_Extract_Status");
            entity.Property(e => e.PageRange)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.Priority)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProcessedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProcessedDate).HasColumnType("datetime");
            entity.Property(e => e.ReasonDeleted)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ReceivedDate).HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("Pending");
            entity.Property(e => e.TakenAt).HasColumnType("datetime");
            entity.Property(e => e.TakenBy)
                .HasMaxLength(60)
                .IsUnicode(false);

            entity.HasOne(d => d.DocumentsFaxQueue).WithMany(p => p.DocumentsInboundFaxes)
                .HasForeignKey(d => d.DocumentsFaxQueueId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Documents_InboundFaxes_Documents_FaxQueues");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DocumentsInboundFaxis> entity);
    }
}
