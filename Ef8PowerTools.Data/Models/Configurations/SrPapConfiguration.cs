// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrPapConfiguration : IEntityTypeConfiguration<SrPap>
    {
        public void Configure(EntityTypeBuilder<SrPap> entity)
        {
            entity.ToTable("SR_PAP");

            entity.HasIndex(e => new { e.ServiceRequestId, e.ProgramId, e.Papstatus, e.Deleted }, "ServiceRequestID_ProgramID_PAPStatus_Deleted");

            entity.Property(e => e.SrPapid).HasColumnName("SR_PAPID");
            entity.Property(e => e.Apimessage)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("APIMessage");
            entity.Property(e => e.AttReceivedDate).HasColumnType("datetime");
            entity.Property(e => e.BvreferralId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BVReferralID");
            entity.Property(e => e.ClientId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ClientID");
            entity.Property(e => e.Comments)
                .HasMaxLength(350)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DenialReason)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ExternalId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MedicalExpense).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Papstatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PAPStatus");
            entity.Property(e => e.Paptype)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PAPType");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.SecondApprovalReason)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.SecondPapstatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SecondPAPStatus");
            entity.Property(e => e.SecondStatusBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondStatusDate).HasColumnType("datetime");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.StatusBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusDate).HasColumnType("datetime");
            entity.Property(e => e.TempPapstatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TempPAPStatus");
            entity.Property(e => e.TempReason)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.TempStatusBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TempStatusDate).HasColumnType("datetime");

            entity.HasOne(d => d.ServiceRequest).WithMany(p => p.SrPaps)
                .HasForeignKey(d => d.ServiceRequestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_PAP_ServiceRequests");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrPap> entity);
    }
}
