// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class ContactPhoneNumberConfiguration : IEntityTypeConfiguration<ContactPhoneNumber>
    {
        public void Configure(EntityTypeBuilder<ContactPhoneNumber> entity)
        {
            entity.ToTable(tb =>
                {
                    tb.HasTrigger("Tr_ContactPhoneNumbers_Audit_Insert");
                    tb.HasTrigger("Tr_ContactPhoneNumbers_Audit_Update");
                    tb.HasTrigger("Tr_ContactPhoneNumbers_Whitelist_Insert");
                    tb.HasTrigger("Tr_ContactPhoneNumbers_Whitelist_Update");
                    tb.HasTrigger("Tr_ContactPhoneNumbers_Whitelist_Validation_Insert");
                    tb.HasTrigger("Tr_ContactPhoneNumbers_Whitelist_Validation_Update");
                });

            entity.HasIndex(e => new { e.ProgramId, e.ContactId, e.Deleted }, "ContactPhone");

            entity.HasIndex(e => new { e.ContactId, e.PhoneType, e.Active, e.Deleted }, "IX_ContactID_PhoneType_Active_Deleted");

            entity.Property(e => e.ContactPhoneNumberId).HasColumnName("ContactPhoneNumberID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Extension)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ExternalId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalID");
            entity.Property(e => e.LastUpdate).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OktoLeaveMsg).HasColumnName("OKtoLeaveMsg");
            entity.Property(e => e.PhoneComments)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhoneType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PreferredTime)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Rank).HasDefaultValue(2);

            entity.HasOne(d => d.Contact).WithMany(p => p.ContactPhoneNumbers)
                .HasForeignKey(d => d.ContactId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ContactPhoneNumbers_Contacts");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<ContactPhoneNumber> entity);
    }
}
