// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PortalStagingRegistrationConfiguration : IEntityTypeConfiguration<PortalStagingRegistration>
    {
        public void Configure(EntityTypeBuilder<PortalStagingRegistration> entity)
        {
            entity.HasKey(e => e.RegistratoinRecordId).HasName("PK_Portal_Straging_Registration");

            entity.ToTable("Portal_Staging_Registration", tb => tb.HasTrigger("tr_PortalStagingRegistrationInsert"));

            entity.Property(e => e.RegistratoinRecordId).HasColumnName("RegistratoinRecordID");
            entity.Property(e => e.AccountId).HasColumnName("AccountID");
            entity.Property(e => e.AccountType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Address1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Address2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AddressType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Baaacknowledgement)
                .HasDefaultValue(true)
                .HasColumnName("BAAAcknowledgement");
            entity.Property(e => e.BaadocumentListId).HasColumnName("BAADocumentListID");
            entity.Property(e => e.BaalanguageAcknowledgement)
                .HasDefaultValue(true)
                .HasColumnName("BAALanguageAcknowledgement");
            entity.Property(e => e.BaasignatureDate).HasColumnName("BAASignatureDate");
            entity.Property(e => e.BaasignatureText)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BAASignatureText");
            entity.Property(e => e.BestTimeToContact)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.BifileDocumentId).HasColumnName("BIFileDocumentID");
            entity.Property(e => e.BillingPreference)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.City)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactCategory)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Dea)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("DEA");
            entity.Property(e => e.Degree)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Facility)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Fax2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.HubRecordId).HasColumnName("HubRecordID");
            entity.Property(e => e.HubRecordOrgId).HasColumnName("HubRecordOrgID");
            entity.Property(e => e.IndividualNpi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("IndividualNPI");
            entity.Property(e => e.IndividualTaxId)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LicensingState)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.MedicareId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("MedicareID");
            entity.Property(e => e.MiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ncpdp)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasColumnName("NCPDP");
            entity.Property(e => e.Npi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NPI");
            entity.Property(e => e.OptOut)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationAddressId).HasColumnName("OrganizationAddressID");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Phone2)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Phone2Extension)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Phone2_Extension");
            entity.Property(e => e.PhoneExtension)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Phone_Extension");
            entity.Property(e => e.PhoneType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhoneType2)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PortalRegistrationType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PortalType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("HCP");
            entity.Property(e => e.PracticeName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PracticeUrl)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PracticeURL");
            entity.Property(e => e.PreferredCommunicationMethod)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProcessDate).HasColumnType("datetime");
            entity.Property(e => e.ProcessedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Ptan)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PTAN");
            entity.Property(e => e.Reason)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RegisteredFromIpaddress)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("RegisteredFromIPAddress");
            entity.Property(e => e.RegistrationRecordAddressId).HasColumnName("RegistrationRecordAddressID");
            entity.Property(e => e.SiteOfService)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.Speciality)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.StagingStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("Pending");
            entity.Property(e => e.State)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StateLicenseNumber)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Suffix)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TakenAt).HasColumnType("datetime");
            entity.Property(e => e.TakenBy)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.TaxId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TaxID");
            entity.Property(e => e.TermsAndConditionsAcknowledgement).HasDefaultValue(true);
            entity.Property(e => e.TermsOfUserFileDocumentId).HasColumnName("TermsOfUserFileDocumentID");
            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UserType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Zip)
                .HasMaxLength(50)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PortalStagingRegistration> entity);
    }
}
