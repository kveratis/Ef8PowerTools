// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrPhysicianConfiguration : IEntityTypeConfiguration<SrPhysician>
    {
        public void Configure(EntityTypeBuilder<SrPhysician> entity)
        {
            entity.ToTable("SR_Physicians", tb => tb.HasTrigger("TR_SR_Physicians"));

            entity.HasIndex(e => new { e.ServiceRequestId, e.ProgramId, e.Deleted }, "IX_SR_Physicians_SRID_Program_Deleted");

            entity.HasIndex(e => new { e.ProgramId, e.SrPhysicianType, e.Deleted }, "ix_SR_Physicians_ProgramID_SR_PhysicianType_Deleted_includes");

            entity.Property(e => e.SrPhysicianId).HasColumnName("SR_PhysicianID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianAddressId).HasColumnName("PhysicianAddressID");
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.SrPhysicianType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SR_PhysicianType");

            entity.HasOne(d => d.Physician).WithMany(p => p.SrPhysicians)
                .HasForeignKey(d => d.PhysicianId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_Physicians_Physicians");

            entity.HasOne(d => d.ServiceRequest).WithMany(p => p.SrPhysicians)
                .HasForeignKey(d => d.ServiceRequestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_Physicians_ServiceRequests");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrPhysician> entity);
    }
}
