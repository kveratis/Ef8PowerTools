// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrTypeGroupDynamicDatumConfiguration : IEntityTypeConfiguration<SrTypeGroupDynamicDatum>
    {
        public void Configure(EntityTypeBuilder<SrTypeGroupDynamicDatum> entity)
        {
            entity.HasKey(e => e.SrTypeGroupDynamicDataId).HasName("PK__SR_TypeG__90B3E200EB5A2C2F");

            entity.ToTable("SR_TypeGroupDynamicData", tb =>
                {
                    tb.HasTrigger("Tr_SR_TypeGroupDynamicData_AuditLog_Insert");
                    tb.HasTrigger("Tr_SR_TypeGroupDynamicData_AuditLog_Update");
                });

            entity.Property(e => e.SrTypeGroupDynamicDataId).HasColumnName("SR_TypeGroupDynamicDataID");
            entity.Property(e => e.Answer)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.AnswerId).HasColumnName("AnswerID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DataGroupId)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DataGroupID");
            entity.Property(e => e.DynamicDataListId).HasColumnName("DynamicDataListID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");

            entity.HasOne(d => d.DynamicDataList).WithMany(p => p.SrTypeGroupDynamicData)
                .HasForeignKey(d => d.DynamicDataListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_TypeGroupDynamicData_DynamicDataList");

            entity.HasOne(d => d.ServiceRequest).WithMany(p => p.SrTypeGroupDynamicData)
                .HasForeignKey(d => d.ServiceRequestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_TypeGroupDynamicData_ServiceRequests");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrTypeGroupDynamicDatum> entity);
    }
}
