// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DocumentsEHipaainviteConfiguration : IEntityTypeConfiguration<DocumentsEHipaainvite>
    {
        public void Configure(EntityTypeBuilder<DocumentsEHipaainvite> entity)
        {
            entity.HasKey(e => e.DocumentsEHipaainvitesId);

            entity.ToTable("Documents_eHIPAAInvites");

            entity.HasIndex(e => e.InvitateId, "InvitateID");

            entity.Property(e => e.DocumentsEHipaainvitesId).HasColumnName("Documents_eHIPAAInvitesID");
            entity.Property(e => e.ConsentData).IsUnicode(false);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Createdby)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Dob).HasColumnName("DOB");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.DocumentStorageId).HasColumnName("DocumentStorageID");
            entity.Property(e => e.DocumentStorageType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.InvitateId).HasColumnName("InvitateID");
            entity.Property(e => e.InviteSent)
                .HasColumnType("datetime")
                .HasColumnName("Invite_Sent");
            entity.Property(e => e.InviteSrid).HasColumnName("Invite_SRID");
            entity.Property(e => e.LastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Lastupdated).HasColumnType("datetime");
            entity.Property(e => e.Lastupdatedby)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("lastupdatedby");
            entity.Property(e => e.NumberofPages)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PafCompleted)
                .HasColumnType("datetime")
                .HasColumnName("PAF_Completed");
            entity.Property(e => e.Pafid).HasColumnName("PAFID");
            entity.Property(e => e.PageRange)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.ProcessedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProcessedDate).HasColumnType("datetime");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ReasonDeleted)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ReceivedDate).HasColumnType("datetime");
            entity.Property(e => e.Srid).HasColumnName("SRID");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusInvite)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Status_Invite");
            entity.Property(e => e.TakenAt).HasColumnType("datetime");
            entity.Property(e => e.TakenBy)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.TemplateId).HasColumnName("TemplateID");
            entity.Property(e => e.Zip)
                .HasMaxLength(50)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DocumentsEHipaainvite> entity);
    }
}
