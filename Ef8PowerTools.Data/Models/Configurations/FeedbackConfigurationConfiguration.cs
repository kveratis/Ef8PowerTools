// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class FeedbackConfigurationConfiguration : IEntityTypeConfiguration<FeedbackConfiguration>
    {
        public void Configure(EntityTypeBuilder<FeedbackConfiguration> entity)
        {
            entity.HasKey(e => e.FeedbackConfigurationId).HasName("PK_Feedback_Configuration");

            entity.ToTable("Feedback_Configurations");

            entity.Property(e => e.FeedbackConfigurationId).HasColumnName("FeedbackConfigurationID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUdpated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ManagementUserGroupId).HasColumnName("ManagementUserGroupID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.SrActivityListId).HasColumnName("SR_ActivityListID");
            entity.Property(e => e.SrTypeListId).HasColumnName("SR_TypeListID");

            entity.HasOne(d => d.ManagementUserGroup).WithMany(p => p.FeedbackConfigurations)
                .HasForeignKey(d => d.ManagementUserGroupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Feedback_Configuration_UserGroup_ManagementUserGroupID");

            entity.HasOne(d => d.Program).WithMany(p => p.FeedbackConfigurations)
                .HasForeignKey(d => d.ProgramId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Feedback_Configuration_Programs_ProgramID");

            entity.HasOne(d => d.SrActivityList).WithMany(p => p.FeedbackConfigurations)
                .HasForeignKey(d => d.SrActivityListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Feedback_Configuration_SR_ActivityList_SR_ActivityListID");

            entity.HasOne(d => d.SrTypeList).WithMany(p => p.FeedbackConfigurations)
                .HasForeignKey(d => d.SrTypeListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Feedback_Configuration_SR_TypeList_SR_TypeListID");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<FeedbackConfiguration> entity);
    }
}
