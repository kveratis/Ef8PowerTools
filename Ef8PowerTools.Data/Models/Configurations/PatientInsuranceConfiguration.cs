// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PatientInsuranceConfiguration : IEntityTypeConfiguration<PatientInsurance>
    {
        public void Configure(EntityTypeBuilder<PatientInsurance> entity)
        {
            entity.ToTable("PatientInsurance");

            entity.HasIndex(e => e.InsuranceType, "IX_PatientInsurance_InsuranceType");

            entity.HasIndex(e => e.PatientId, "IX_PatientInsurance_PatientID");

            entity.Property(e => e.PatientInsuranceId).HasColumnName("PatientInsuranceID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Binnumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BINNumber");
            entity.Property(e => e.CardHolder)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ChCell)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CH_Cell");
            entity.Property(e => e.ChDob).HasColumnName("CH_DOB");
            entity.Property(e => e.ChEmail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CH_Email");
            entity.Property(e => e.ChPhone)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CH_Phone");
            entity.Property(e => e.ChSsn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CH_SSN");
            entity.Property(e => e.Comments)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EBvModularTransactionId).HasColumnName("eBvModularTransactionID");
            entity.Property(e => e.EligibityDrugName)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.EmployerAddress)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.EmployerName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ExternalId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalID");
            entity.Property(e => e.ExternalPayorId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalPayorID");
            entity.Property(e => e.ExternalPbmid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalPBMID");
            entity.Property(e => e.GroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.InsuranceEffectiveDate).HasColumnType("datetime");
            entity.Property(e => e.InsuranceEndDate).HasColumnType("datetime");
            entity.Property(e => e.InsurancePayerId).HasColumnName("InsurancePayerID");
            entity.Property(e => e.InsurancePhoneNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.InsuranceType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MedicalGroup)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MedicalInsuranceId).HasColumnName("MedicalInsuranceID");
            entity.Property(e => e.MedicalSupplementPlanLetter)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PayerPlanTypeLookupId).HasColumnName("PayerPlanTypeLookupID");
            entity.Property(e => e.Pbmcategory)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMCategory");
            entity.Property(e => e.PbminsurancePhoneNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMInsurancePhoneNumber");
            entity.Property(e => e.Pcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PCN");
            entity.Property(e => e.PharmacyInsuranceId).HasColumnName("PharmacyInsuranceID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Relationship)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RxEbvcontrolNumber)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("RxEBVControlNumber");
            entity.Property(e => e.SubscriberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SubscriberID");
            entity.Property(e => e.SubscriberIdPbm)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SubscriberID_PBM");
            entity.Property(e => e.TruePharmacyInsuranceId).HasColumnName("TruePharmacyInsuranceID");

            entity.HasOne(d => d.MedicalInsurance).WithMany(p => p.PatientInsuranceMedicalInsurances)
                .HasForeignKey(d => d.MedicalInsuranceId)
                .HasConstraintName("FK_PatientInsurance_Insurances");

            entity.HasOne(d => d.Patient).WithMany(p => p.PatientInsurances)
                .HasForeignKey(d => d.PatientId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PatientInsurance_Patients");

            entity.HasOne(d => d.PharmacyInsurance).WithMany(p => p.PatientInsurancePharmacyInsurances)
                .HasForeignKey(d => d.PharmacyInsuranceId)
                .HasConstraintName("FK_PatientInsurance_Insurances2");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PatientInsurance> entity);
    }
}
