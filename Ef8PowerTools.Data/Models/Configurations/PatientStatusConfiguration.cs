// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PatientStatusConfiguration : IEntityTypeConfiguration<PatientStatus>
    {
        public void Configure(EntityTypeBuilder<PatientStatus> entity)
        {
            entity.ToTable("PatientStatus", tb =>
                {
                    tb.HasTrigger("UpdatePatientReactivationsTable_insert");
                    tb.HasTrigger("UpdatePatientReactivationsTable_update");
                });

            entity.HasIndex(e => new { e.PatientId, e.Deleted }, "PatientID_Deleted");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.PatientId }, "ProgramInclude");

            entity.Property(e => e.PatientStatusId).HasColumnName("PatientStatusID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CreatedFileName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugNdc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DrugNDC");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientStatusListId).HasColumnName("PatientStatusListID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.RestatementFlag)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Spid).HasColumnName("SPID");
            entity.Property(e => e.StatusDate).HasColumnType("datetime");
            entity.Property(e => e.StatusType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("Hub");
            entity.Property(e => e.TransactionId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TransactionID");

            entity.HasOne(d => d.Patient).WithMany(p => p.PatientStatuses)
                .HasForeignKey(d => d.PatientId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PatientStatus_Patients");

            entity.HasOne(d => d.PatientStatusList).WithMany(p => p.PatientStatuses)
                .HasForeignKey(d => d.PatientStatusListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PatientStatus_PatientStatusList");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PatientStatus> entity);
    }
}
