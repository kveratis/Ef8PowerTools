// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class MessageThreadConfiguration : IEntityTypeConfiguration<MessageThread>
    {
        public void Configure(EntityTypeBuilder<MessageThread> entity)
        {
            entity.HasKey(e => e.ThreadId).HasName("PK_Threads");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted }, "IX_ThreadsProgram");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.LastMessageDate }, "ProgramLastMsgDate");

            entity.Property(e => e.ThreadId).HasColumnName("ThreadID");
            entity.Property(e => e.AssignedTo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AssignedToGroupId).HasColumnName("AssignedToGroupID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastMessageDate).HasColumnType("datetime");
            entity.Property(e => e.LastSendFromUserId).HasColumnName("LastSendFromUserID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LockedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MessageTypeId).HasColumnName("MessageTypeID");
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ProviderId).HasColumnName("ProviderID");
            entity.Property(e => e.SendFromApplicationId).HasColumnName("SendFromApplicationID");
            entity.Property(e => e.SendFromUserId).HasColumnName("SendFromUserID");
            entity.Property(e => e.SendToApplicationId).HasColumnName("SendToApplicationID");
            entity.Property(e => e.SendToUserId).HasColumnName("SendToUserID");
            entity.Property(e => e.SenderFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SenderLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Source)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValue("O");
            entity.Property(e => e.Subject)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Therapy)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.MessageType).WithMany(p => p.MessageThreads)
                .HasForeignKey(d => d.MessageTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Threads_MessageTypes");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<MessageThread> entity);
    }
}
