// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class LtrEmailNotificationConfiguration : IEntityTypeConfiguration<LtrEmailNotification>
    {
        public void Configure(EntityTypeBuilder<LtrEmailNotification> entity)
        {
            entity.HasKey(e => e.EmailNotificationId);

            entity.ToTable("LTR_EmailNotification", tb =>
                {
                    tb.HasTrigger("Tr_LTR_EmailNotification_Audit_Insert");
                    tb.HasTrigger("Tr_LTR_EmailNotification_Audit_Update");
                });

            entity.Property(e => e.EmailNotificationId).HasColumnName("EmailNotificationID");
            entity.Property(e => e.Comments).HasMaxLength(1000);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DeliveredDate).HasColumnType("datetime");
            entity.Property(e => e.EmailBody).HasColumnType("text");
            entity.Property(e => e.EmailStatusId).HasColumnName("EmailStatusID");
            entity.Property(e => e.EmailSubject)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.EmailTo)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EventType).IsUnicode(false);
            entity.Property(e => e.ExternalMailId)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("ExternalMailID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.NotificationItemId).HasColumnName("NotificationItemID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ReadDate).HasColumnType("datetime");
            entity.Property(e => e.SentDate).HasColumnType("datetime");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.TrackDate).HasColumnType("datetime");

            entity.HasOne(d => d.NotificationItem).WithMany(p => p.LtrEmailNotifications)
                .HasForeignKey(d => d.NotificationItemId)
                .OnDelete(DeleteBehavior.ClientSetNull);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<LtrEmailNotification> entity);
    }
}
