// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class EBvCoverageBenefitDetailConfiguration : IEntityTypeConfiguration<EBvCoverageBenefitDetail>
    {
        public void Configure(EntityTypeBuilder<EBvCoverageBenefitDetail> entity)
        {
            entity.HasKey(e => e.EBvCoverageBenefitDetailsId);

            entity.ToTable("eBvCoverageBenefitDetails");

            entity.Property(e => e.EBvCoverageBenefitDetailsId).HasColumnName("eBvCoverageBenefitDetailsID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.BenefitInvestigationEBvId).HasColumnName("BenefitInvestigation_eBV_ID");
            entity.Property(e => e.BinLocationNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CardHolderId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CardHolderID");
            entity.Property(e => e.CardHolderName)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.CheckId)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.GroupName)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.GroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MailOrderPharmacy)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.MedicareId)
                .HasMaxLength(11)
                .IsUnicode(false);
            entity.Property(e => e.Ndc)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("NDC");
            entity.Property(e => e.PatientAddress1)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientCity)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientDataConflict)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PatientDob)
                .HasColumnType("datetime")
                .HasColumnName("PatientDOB");
            entity.Property(e => e.PatientDobspecified).HasColumnName("PatientDOBSpecified");
            entity.Property(e => e.PatientEligibilityErrorMessage)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientEligibilityStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientFirstName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientGender)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PatientLastName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientMiddleName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientPrefix)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PatientState)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PatientSuffix)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PatientZip)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PayerMessage)
                .HasMaxLength(264)
                .IsUnicode(false);
            entity.Property(e => e.PbmId)
                .HasMaxLength(35)
                .IsUnicode(false)
                .HasColumnName("PbmID");
            entity.Property(e => e.PbmMemberId)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("PbmMemberID");
            entity.Property(e => e.PbmName)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.PcnNumber)
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.PersonCode)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyBenefitLtcstatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PharmacyBenefitLTCStatus");
            entity.Property(e => e.PharmacyBenefitLtcstatusSpecified).HasColumnName("PharmacyBenefitLTCStatusSpecified");
            entity.Property(e => e.PharmacyBenefitMailOrderStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyBenefitRetailStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyBenefitSpecialtyStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PlanEffectiveDate).HasColumnType("datetime");
            entity.Property(e => e.PlanName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PlanType)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PolicyNumber)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Relationship)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.RetailPharmacy)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.BenefitInvestigationEBv).WithMany(p => p.EBvCoverageBenefitDetails)
                .HasForeignKey(d => d.BenefitInvestigationEBvId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_eBvCoverageBenefitDetails_BenefitInvestigation_eBV");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<EBvCoverageBenefitDetail> entity);
    }
}
