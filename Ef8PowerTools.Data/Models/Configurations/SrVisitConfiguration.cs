// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrVisitConfiguration : IEntityTypeConfiguration<SrVisit>
    {
        public void Configure(EntityTypeBuilder<SrVisit> entity)
        {
            entity.HasKey(e => e.SrVisitId).HasName("PK_ServiceRequest_Visits");

            entity.ToTable("SR_Visits");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted }, "<SR_Visits_SRIDContactIDStatus>");

            entity.Property(e => e.SrVisitId).HasColumnName("SR_VisitID");
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DeclineReason)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Feedback).IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OrgId).HasColumnName("OrgID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ReassignVisitId).HasColumnName("ReassignVisitID");
            entity.Property(e => e.Resolution)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ResolutionComment)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ScheduledDate).HasColumnType("datetime");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.StatusBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusDate).HasColumnType("datetime");
            entity.Property(e => e.StatusReason)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TrainingDate).HasColumnType("datetime");
            entity.Property(e => e.TrainingNote).IsUnicode(false);
            entity.Property(e => e.TrainingType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VisitStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VisitType)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Contact).WithMany(p => p.SrVisits)
                .HasForeignKey(d => d.ContactId)
                .HasConstraintName("FK_SR_Visits_Contacts");

            entity.HasOne(d => d.Org).WithMany(p => p.SrVisits)
                .HasForeignKey(d => d.OrgId)
                .HasConstraintName("FK_SR_Visits_Organizations");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrVisit> entity);
    }
}
