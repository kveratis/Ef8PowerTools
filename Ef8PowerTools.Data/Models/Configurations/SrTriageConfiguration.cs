// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrTriageConfiguration : IEntityTypeConfiguration<SrTriage>
    {
        public void Configure(EntityTypeBuilder<SrTriage> entity)
        {
            entity.ToTable("SR_Triages");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.ServiceRequestId }, "IX_SR_Triages_ProgramID_Deleted");

            entity.HasIndex(e => e.ServiceRequestId, "SRID");

            entity.Property(e => e.SrTriageId).HasColumnName("SR_TriageID");
            entity.Property(e => e.Cancelled).HasDefaultValue(false);
            entity.Property(e => e.CancelledBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CancelledDate).HasColumnType("datetime");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.DrugName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ExternalId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ReasonSelected)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RedirectedToSpdate)
                .HasColumnType("datetime")
                .HasColumnName("RedirectedToSPDate");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.TriagePayerType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TriageType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TriagedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TriagedDate).HasColumnType("datetime");
            entity.Property(e => e.VendorId).HasColumnName("VendorID");

            entity.HasOne(d => d.Program).WithMany(p => p.SrTriages)
                .HasForeignKey(d => d.ProgramId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_Triages_Programs");

            entity.HasOne(d => d.ServiceRequest).WithMany(p => p.SrTriages)
                .HasForeignKey(d => d.ServiceRequestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_Triages_ServiceRequests");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrTriage> entity);
    }
}
