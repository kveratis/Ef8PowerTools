// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PhysicianEnrollmentsAuditConfiguration : IEntityTypeConfiguration<PhysicianEnrollmentsAudit>
    {
        public void Configure(EntityTypeBuilder<PhysicianEnrollmentsAudit> entity)
        {
            entity.HasKey(e => e.PhysicianEnrollmentAuditId);

            entity.ToTable("PhysicianEnrollments_Audit", tb => tb.HasTrigger("TR_PhysicianEnrollments_Audit_Permission"));

            entity.Property(e => e.PhysicianEnrollmentAuditId).HasColumnName("PhysicianEnrollment_AuditID");
            entity.Property(e => e.AdditionalRemssigDate)
                .HasColumnType("datetime")
                .HasColumnName("AdditionalREMSSigDate");
            entity.Property(e => e.AttachedDocumentIdPe).HasColumnName("AttachedDocumentID_PE");
            entity.Property(e => e.ChangeAction)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Change_Action");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CreatedByLog)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CreatedBy_log");
            entity.Property(e => e.CreatedBySr)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CreatedBy_SR");
            entity.Property(e => e.CreatedLog)
                .HasColumnType("datetime")
                .HasColumnName("Created_log");
            entity.Property(e => e.CreatedSr)
                .HasColumnType("datetime")
                .HasColumnName("Created_SR");
            entity.Property(e => e.DocumentSource)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DocumentType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugCertificationNumber)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.EnrollmentDate).HasColumnType("datetime");
            entity.Property(e => e.FirstNamePhy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FirstName_Phy");
            entity.Property(e => e.LastNamePhy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("LastName_phy");
            entity.Property(e => e.LastUpdateBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBySr)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("LastUpdatedBy_SR");
            entity.Property(e => e.LastUpdatedSr)
                .HasColumnType("datetime")
                .HasColumnName("LastUpdated_SR");
            entity.Property(e => e.Npi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NPI");
            entity.Property(e => e.OrgAddress1)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.OrgCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OrgState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OrgZip)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.PhyAddress1)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.PhyAddressName)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("phyAddressName");
            entity.Property(e => e.PhyCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhyPhone1)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.PhyState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhyZip)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianEnrollmentId).HasColumnName("PhysicianEnrollmentID");
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ProviderType)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.Resolution)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.SrAssignedTo)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("SR_AssignedTo");
            entity.Property(e => e.SrSubTypeFullDesc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SR_SubTypeFullDesc");
            entity.Property(e => e.SrTypeFullDesc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SR_TypeFullDesc");
            entity.Property(e => e.Srid).HasColumnName("SRID");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PhysicianEnrollmentsAudit> entity);
    }
}
