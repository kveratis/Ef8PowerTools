// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DocumentOutboundFaxisConfiguration : IEntityTypeConfiguration<DocumentOutboundFaxis>
    {
        public void Configure(EntityTypeBuilder<DocumentOutboundFaxis> entity)
        {
            entity.HasKey(e => e.DocumentOutboundFaxId);

            entity.ToTable("Document_OutboundFaxes", tb =>
                {
                    tb.HasTrigger("Tr_Document_OutboundFaxes_Whitelist_Insert");
                    tb.HasTrigger("Tr_Document_OutboundFaxes_Whitelist_Update");
                    tb.HasTrigger("Tr_Document_OutboundFaxes_Whitelist_Validation_Insert");
                    tb.HasTrigger("Tr_Document_OutboundFaxes_Whitelist_Validation_Update");
                });

            entity.HasIndex(e => new { e.DocumentId, e.ProgramId }, "DocumentID_ProgramID_Includes");

            entity.Property(e => e.DocumentOutboundFaxId).HasColumnName("Document_OutboundFaxID");
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.FaxJobId).HasColumnName("FaxJobID");
            entity.Property(e => e.FaxJobXdn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FaxJobXDN");
            entity.Property(e => e.FaxNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FaxStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("Pending");
            entity.Property(e => e.FaxTo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProcessedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProcessedDate).HasColumnType("datetime");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.SentDate).HasColumnType("datetime");
            entity.Property(e => e.StatusDate).HasColumnType("datetime");
            entity.Property(e => e.StatusReason)
                .HasMaxLength(255)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DocumentOutboundFaxis> entity);
    }
}
