// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class WorkflowLookupItemConfiguration : IEntityTypeConfiguration<WorkflowLookupItem>
    {
        public void Configure(EntityTypeBuilder<WorkflowLookupItem> entity)
        {
            entity.HasKey(e => e.LookupItemId).HasName("Pk_LookupItems_LookupItemID");

            entity.ToTable(tb => tb.HasComment("Lookup items"));

            entity.Property(e => e.LookupItemId)
                .ValueGeneratedNever()
                .HasComment("The primary key")
                .HasColumnName("LookupItemID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Createdby)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IsActive)
                .HasDefaultValue(true)
                .HasComment("Active flag");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedby)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LookupDataListId).HasColumnName("LookupDataListID");
            entity.Property(e => e.LookupDisplay)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasComment("The lookup display value");
            entity.Property(e => e.LookupId)
                .HasComment("The parent lookup id")
                .HasColumnName("LookupID");
            entity.Property(e => e.LookupItemTag).IsUnicode(false);
            entity.Property(e => e.LookupValue)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasComment("The lookup value");
            entity.Property(e => e.Sequence).HasComment("The lookup display sequence");

            entity.HasOne(d => d.Lookup).WithMany(p => p.WorkflowLookupItems)
                .HasForeignKey(d => d.LookupId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WorkflowLookupItems_WorkflowLookups");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WorkflowLookupItem> entity);
    }
}
