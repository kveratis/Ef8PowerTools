// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PortalStagingSrfConfiguration : IEntityTypeConfiguration<PortalStagingSrf>
    {
        public void Configure(EntityTypeBuilder<PortalStagingSrf> entity)
        {
            entity.HasKey(e => e.RecordId).HasName("PK_Portal_Straging_SRF");

            entity.ToTable("Portal_Staging_SRF");

            entity.Property(e => e.RecordId).HasColumnName("RecordID");
            entity.Property(e => e.Allergies).IsUnicode(false);
            entity.Property(e => e.Attn)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Checksum)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalRationaleForChoosingDurolane)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("Clinical_Rationale_for_choosing_DUROLANE");
            entity.Property(e => e.ClinicalRationaleForChoosingSupartz)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("Clinical_Rationale_for_choosing_SUPARTZ");
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CreatedByType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DateProductNeeded).HasColumnType("datetime");
            entity.Property(e => e.DatesOfAdministration)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("Dates_of_Administration");
            entity.Property(e => e.DeletedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DeletedByType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.HubSrid).HasColumnName("HubSRID");
            entity.Property(e => e.Icd9code)
                .IsUnicode(false)
                .HasColumnName("ICD9Code");
            entity.Property(e => e.Ipaddress)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("IPAddress");
            entity.Property(e => e.IsBllateral).HasColumnName("isBllateral");
            entity.Property(e => e.IsBllateralDurolane).HasColumnName("isBllateralDurolane");
            entity.Property(e => e.IsBllateralGelsyn3).HasColumnName("isBllateralGelsyn3");
            entity.Property(e => e.IsDispenseAsWritten).HasColumnName("isDispenseAsWritten");
            entity.Property(e => e.IsLeft).HasColumnName("isLeft");
            entity.Property(e => e.IsLeftDurolane).HasColumnName("isLeftDurolane");
            entity.Property(e => e.IsLeftGelsyn3).HasColumnName("isLeftGelsyn3");
            entity.Property(e => e.IsMedicalAndPharmacyBenefit).HasColumnName("isMedicalAndPharmacyBenefit");
            entity.Property(e => e.IsMedicalBenefitOnly).HasColumnName("isMedicalBenefitOnly");
            entity.Property(e => e.IsNewProvider).HasColumnName("isNewProvider");
            entity.Property(e => e.IsOfficeAcceptsDefaultTriage).HasColumnName("isOfficeAcceptsDefaultTriage");
            entity.Property(e => e.IsPatientFailed3MonthsOfConservativeTreatment).HasColumnName("Is_patient_failed_3_months_of_conservative_treatment");
            entity.Property(e => e.IsPatientHadReductionOfPainWithPreviousTreatment).HasColumnName("Is_patient_had_reduction_of_pain_with_previous_treatment");
            entity.Property(e => e.IsPatientHome).HasColumnName("isPatientHome");
            entity.Property(e => e.IsPatientPresent).HasColumnName("isPatientPresent");
            entity.Property(e => e.IsPatientPreviouslyBeenTreatedWithSodiumHyaluronate).HasColumnName("Is_patient_previously_been_treated_with_sodium_hyaluronate");
            entity.Property(e => e.IsPatientReceivedIntraArticularSteroidInjection).HasColumnName("Is_patient_received_intra_articular_steroid_injection");
            entity.Property(e => e.IsPharmacyBenefitOnly).HasColumnName("isPharmacyBenefitOnly");
            entity.Property(e => e.IsPhysicianOffice).HasColumnName("isPhysicianOffice");
            entity.Property(e => e.IsProviderPresent).HasColumnName("isProviderPresent");
            entity.Property(e => e.IsRight).HasColumnName("isRight");
            entity.Property(e => e.IsRightDurolane).HasColumnName("isRightDurolane");
            entity.Property(e => e.IsRightGelsyn3).HasColumnName("isRightGelsyn3");
            entity.Property(e => e.IsRx).HasColumnName("isRx");
            entity.Property(e => e.IsRxDurolane).HasColumnName("isRxDurolane");
            entity.Property(e => e.IsRxGelsyn3).HasColumnName("isRxGelsyn3");
            entity.Property(e => e.IsSubstitutionsAllowed).HasColumnName("isSubstitutionsAllowed");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAlternateContact)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientContactPhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientDaytimePhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientDob)
                .HasColumnType("datetime")
                .HasColumnName("PatientDOB");
            entity.Property(e => e.PatientEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientEveningPhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientGender)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientMiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientPrefix)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientPrimaryLanguage)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientRecordType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientSignatureDate).HasColumnType("datetime");
            entity.Property(e => e.PatientSignatureOutput).IsUnicode(false);
            entity.Property(e => e.PatientState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientSuffix)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientTypedName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientZip)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PatientZIP");
            entity.Property(e => e.Pbmcard).HasColumnName("PBMCard");
            entity.Property(e => e.PbmgroupId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMGroupID");
            entity.Property(e => e.PbmmemberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMMemberID");
            entity.Property(e => e.Pbmname)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMName");
            entity.Property(e => e.PrescriberSignatureDate).HasColumnType("datetime");
            entity.Property(e => e.PrescriberSignatureOutput).IsUnicode(false);
            entity.Property(e => e.PrescriberTypedName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionDirections).IsUnicode(false);
            entity.Property(e => e.PrescriptionHeight)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionWeight)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryMedicalGroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryMedicalInsuranceCardHolderName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryMedicalInsuranceEmployerName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryMedicalInsuranceId).HasColumnName("PrimaryMedicalInsuranceID");
            entity.Property(e => e.PrimaryMedicalInsuranceName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryMedicalInsurancePhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryMedicalInsuranceRelationship)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.PrimaryMedicalPatientInsuranceId).HasColumnName("PrimaryMedicalPatientInsuranceID");
            entity.Property(e => e.PrimaryMedicalPolicyNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProcessDate).HasColumnType("datetime");
            entity.Property(e => e.ProcessedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProductDateRangeOfTreatment)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("product_date_range_of_treatment");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ProviderAddress1)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderAddress2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderCity)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderFax)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderId).HasColumnName("ProviderID");
            entity.Property(e => e.ProviderLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderMdspecialty)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ProviderMDSpecialty");
            entity.Property(e => e.ProviderNpi)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ProviderNPI");
            entity.Property(e => e.ProviderOfficeContact)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderPhone)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderPracticeName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderState)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderStateMedLicNumber)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderTaxId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ProviderTaxID");
            entity.Property(e => e.ProviderZip)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RecordStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RelationToPatient)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.SceduledInjectionDate).HasColumnType("datetime");
            entity.Property(e => e.SecondaryMedicalGroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryMedicalInsuranceCardHolderName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryMedicalInsuranceEmployerName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryMedicalInsuranceId).HasColumnName("SecondaryMedicalInsuranceID");
            entity.Property(e => e.SecondaryMedicalInsuranceName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryMedicalInsurancePhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryMedicalInsuranceRelationship)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.SecondaryMedicalPatientInsuranceId).HasColumnName("SecondaryMedicalPatientInsuranceID");
            entity.Property(e => e.SecondaryMedicalPolicyNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SyringesKnee).IsUnicode(false);
            entity.Property(e => e.SyringesKneeDurolane).IsUnicode(false);
            entity.Property(e => e.SyringesKneeGelsyn3).IsUnicode(false);
            entity.Property(e => e.Therapy)
                .HasMaxLength(50)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PortalStagingSrf> entity);
    }
}
