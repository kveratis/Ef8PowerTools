// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class CoherusGroupGeoStageConfiguration : IEntityTypeConfiguration<CoherusGroupGeoStage>
    {
        public void Configure(EntityTypeBuilder<CoherusGroupGeoStage> entity)
        {
            entity
                .HasNoKey()
                .ToTable("Coherus_Group_Geo_Stage");

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.FileName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.GroupId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GROUP_ID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsActive)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("IS_ACTIVE");
            entity.Property(e => e.RegionOrCounty)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("REGION_OR_COUNTY");
            entity.Property(e => e.SalesTeamActiveEndDate)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SALES_TEAM_ACTIVE_END_DATE");
            entity.Property(e => e.SalesTeamActiveStartDate)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SALES_TEAM_ACTIVE_START_DATE");
            entity.Property(e => e.SalesTeamName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SALES_TEAM_NAME");
            entity.Property(e => e.StateOrProvince)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATE_OR_PROVINCE");
            entity.Property(e => e.Zip)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZIP");
            entity.Property(e => e.ZipAlignmtActiveEndDate)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZIP_ALIGNMT_ACTIVE_END_DATE");
            entity.Property(e => e.ZipAlignmtActiveStartDate)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZIP_ALIGNMT_ACTIVE_START_DATE");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CoherusGroupGeoStage> entity);
    }
}
