// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class MessageConfiguration : IEntityTypeConfiguration<Message>
    {
        public void Configure(EntityTypeBuilder<Message> entity)
        {
            entity.HasIndex(e => new { e.ProgramId, e.Deleted }, "IX_MessagesProgram");

            entity.Property(e => e.MessageId).HasColumnName("MessageID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MessageText)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ProviderId).HasColumnName("ProviderID");
            entity.Property(e => e.Reviewed)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.SendFromUserId).HasColumnName("SendFromUserID");
            entity.Property(e => e.SenderFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SenderLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Source)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ThreadId).HasColumnName("ThreadID");

            entity.HasOne(d => d.Organization).WithMany(p => p.Messages)
                .HasForeignKey(d => d.OrganizationId)
                .HasConstraintName("FK_Messages_Organizations");

            entity.HasOne(d => d.Patient).WithMany(p => p.Messages)
                .HasForeignKey(d => d.PatientId)
                .HasConstraintName("FK_Messages_Patients");

            entity.HasOne(d => d.Provider).WithMany(p => p.Messages)
                .HasForeignKey(d => d.ProviderId)
                .HasConstraintName("FK_Messages_Physicians");

            entity.HasOne(d => d.Thread).WithMany(p => p.Messages)
                .HasForeignKey(d => d.ThreadId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Messages_Threads");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Message> entity);
    }
}
