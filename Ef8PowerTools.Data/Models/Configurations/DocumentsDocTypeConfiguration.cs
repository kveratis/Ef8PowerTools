// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DocumentsDocTypeConfiguration : IEntityTypeConfiguration<DocumentsDocType>
    {
        public void Configure(EntityTypeBuilder<DocumentsDocType> entity)
        {
            entity.HasKey(e => e.DocumentsDocTypesId).HasName("PK_Documents_DocTypes_Temp");

            entity.ToTable("Documents_DocTypes");

            entity.Property(e => e.DocumentsDocTypesId).HasColumnName("Documents_DocTypesID");
            entity.Property(e => e.AttachmentDocumentId).HasColumnName("AttachmentDocumentID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Deleted).HasDefaultValue(false);
            entity.Property(e => e.DocumentId).HasColumnName("DocumentID");
            entity.Property(e => e.DocumentListId).HasColumnName("DocumentListID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Reviewed).HasColumnType("datetime");
            entity.Property(e => e.ReviewedBy)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Document).WithMany(p => p.DocumentsDocTypes)
                .HasForeignKey(d => d.DocumentId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Documents_DocTypes_Documents");

            entity.HasOne(d => d.DocumentList).WithMany(p => p.DocumentsDocTypes)
                .HasForeignKey(d => d.DocumentListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Documents_DocTypes_DocumentList");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DocumentsDocType> entity);
    }
}
