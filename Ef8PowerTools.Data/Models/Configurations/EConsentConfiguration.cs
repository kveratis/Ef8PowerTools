// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class EConsentConfiguration : IEntityTypeConfiguration<EConsent>
    {
        public void Configure(EntityTypeBuilder<EConsent> entity)
        {
            entity.HasKey(e => e.EConsentId).HasName("PK_eConsentID");

            entity.ToTable("eConsent");

            entity.Property(e => e.EConsentId).HasColumnName("eConsentID");
            entity.Property(e => e.CaregiverFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverHomePhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverMobilePhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientDob).HasColumnName("PatientDOB");
            entity.Property(e => e.PatientEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientFirstName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientLastName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientPrimaryInsurance)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientSecondaryInsurance)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientZip)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberPhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberSignature).IsUnicode(false);
            entity.Property(e => e.PrescriberState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberZip)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProcessDate).HasColumnType("datetime");
            entity.Property(e => e.ProcessedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Reason)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RequestIp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("RequestIP");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.StagingStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("Pending");
            entity.Property(e => e.TakenAt).HasColumnType("datetime");
            entity.Property(e => e.TakenBy)
                .HasMaxLength(60)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<EConsent> entity);
    }
}
