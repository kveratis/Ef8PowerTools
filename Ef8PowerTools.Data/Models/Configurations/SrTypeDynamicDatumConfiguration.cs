// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrTypeDynamicDatumConfiguration : IEntityTypeConfiguration<SrTypeDynamicDatum>
    {
        public void Configure(EntityTypeBuilder<SrTypeDynamicDatum> entity)
        {
            entity.HasKey(e => e.SrTypeDynamicDataId);

            entity.ToTable("SR_TypeDynamicData", tb => tb.HasTrigger("TR_SR_TypeDynamicData"));

            entity.HasIndex(e => e.DynamicDataListId, "IX_DynamicDataListID");

            entity.HasIndex(e => new { e.ServiceRequestId, e.Deleted }, "IX_NCI_SR_TDD_SR_Del");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.ServiceRequestId }, "ProgramSRID");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.DynamicDataListId, e.Answer, e.AnswerId, e.ServiceRequestId }, "SR_TypeDynamicData_IDX_Covering");

            entity.Property(e => e.SrTypeDynamicDataId).HasColumnName("SR_TypeDynamicDataID");
            entity.Property(e => e.Answer)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.AnswerId).HasColumnName("AnswerID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DynamicDataListId).HasColumnName("DynamicDataListID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProductApproved)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");

            entity.HasOne(d => d.DynamicDataList).WithMany(p => p.SrTypeDynamicData)
                .HasForeignKey(d => d.DynamicDataListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_TypeDynamicData_DynamicDataList1");

            entity.HasOne(d => d.ServiceRequest).WithMany(p => p.SrTypeDynamicData)
                .HasForeignKey(d => d.ServiceRequestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_TypeDynamicData_ServiceRequests1");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrTypeDynamicDatum> entity);
    }
}
