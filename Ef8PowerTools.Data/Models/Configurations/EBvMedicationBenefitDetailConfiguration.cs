// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class EBvMedicationBenefitDetailConfiguration : IEntityTypeConfiguration<EBvMedicationBenefitDetail>
    {
        public void Configure(EntityTypeBuilder<EBvMedicationBenefitDetail> entity)
        {
            entity.HasKey(e => e.EBvMedicationBenefitDetailsId);

            entity.ToTable("eBvMedicationBenefitDetails");

            entity.Property(e => e.EBvMedicationBenefitDetailsId).HasColumnName("eBvMedicationBenefitDetailsID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.BenefitInvestigationEBvId).HasColumnName("BenefitInvestigation_eBV_ID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugBrandName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DrugCodeQualifier)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DrugCodeValue)
                .HasMaxLength(60)
                .IsUnicode(false);
            entity.Property(e => e.DrugCoverageStatusCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugDaysSupply)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.DrugDescription)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.DrugForm)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.DrugGenericName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DrugId)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DrugQuantity)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.DrugQuantityUom)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("DrugQuantityUOM");
            entity.Property(e => e.DrugRoute)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.DrugStrength)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DrugStrengthUnit)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EBvCoverageBenefitDetailsId).HasColumnName("eBvCoverageBenefitDetailsID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ndc)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("NDC");
            entity.Property(e => e.PbmErrorMessage)
                .HasMaxLength(2000)
                .IsUnicode(false);
            entity.Property(e => e.PbmName)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.PlanName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PriorAuthorizationStatusCode)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Spid).HasColumnName("SPId");

            entity.HasOne(d => d.BenefitInvestigationEBv).WithMany(p => p.EBvMedicationBenefitDetails)
                .HasForeignKey(d => d.BenefitInvestigationEBvId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_eBvMedicationBenefitDetails_BenefitInvestigation_eBV");

            entity.HasOne(d => d.EBvCoverageBenefitDetails).WithMany(p => p.EBvMedicationBenefitDetails)
                .HasForeignKey(d => d.EBvCoverageBenefitDetailsId)
                .HasConstraintName("FK_eBvMedicationBenefitDetails_eBvCoverageBenefitDetails");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<EBvMedicationBenefitDetail> entity);
    }
}
