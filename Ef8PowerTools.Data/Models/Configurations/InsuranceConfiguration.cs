// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class InsuranceConfiguration : IEntityTypeConfiguration<Insurance>
    {
        public void Configure(EntityTypeBuilder<Insurance> entity)
        {
            entity.HasKey(e => e.InsuranceId).HasName("PK_PayerBenefitPlans");

            entity.ToTable(tb => tb.HasTrigger("Insurances_AlwaysActive"));

            entity.Property(e => e.InsuranceId).HasColumnName("InsuranceID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.BenefitPlanType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.BenefitType)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Binnumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BINNumber");
            entity.Property(e => e.ContactName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("(getdate())");
            entity.Property(e => e.CreatedProgramId).HasColumnName("CreatedProgramID");
            entity.Property(e => e.ExternalId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalID");
            entity.Property(e => e.ExternalPayorId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalPayorID");
            entity.Property(e => e.ExternalPbmid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalPBMID");
            entity.Property(e => e.GroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.InsuranceBenefitPlanName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.InsuranceEligibilityCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Insurance_Eligibility_Code");
            entity.Property(e => e.InsuranceEligibilityName)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("Insurance_Eligibility_Name");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdatedProgramId).HasColumnName("LastUpdatedProgramID");
            entity.Property(e => e.MdmprogramId)
                .HasDefaultValue(10)
                .HasColumnName("MDMProgramID");
            entity.Property(e => e.PayerId).HasColumnName("PayerID");
            entity.Property(e => e.PayerTypeCode1)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("PayerTypeCode_1");
            entity.Property(e => e.Pcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PCN");
            entity.Property(e => e.PlanTypeCode2)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("PlanTypeCode_2");
            entity.Property(e => e.PlanTypeDetailBreakdownCode4)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("PlanTypeDetailBreakdownCode_4");
            entity.Property(e => e.PlanTypeDetailBreakdownCode5)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("PlanTypeDetailBreakdownCode_5");
            entity.Property(e => e.PlanTypeDetailCode3)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("PlanTypeDetailCode_3");
            entity.Property(e => e.ProductType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SoftwareVendorCertificationId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SoftwareVendorCertificationID");

            entity.HasOne(d => d.Payer).WithMany(p => p.Insurances)
                .HasForeignKey(d => d.PayerId)
                .HasConstraintName("FK_Insurances_Payers");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Insurance> entity);
    }
}
