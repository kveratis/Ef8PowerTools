// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class CareCyclePhysicianConfiguration : IEntityTypeConfiguration<CareCyclePhysician>
    {
        public void Configure(EntityTypeBuilder<CareCyclePhysician> entity)
        {
            entity.HasIndex(e => new { e.CareCycleId, e.PhysicianId, e.Rank, e.Deleted }, "IX_CareCycleID_PhysicianID_Rank_Deleted_Includes");

            entity.HasIndex(e => new { e.ProgramId, e.Rank, e.Active, e.Deleted }, "ProgramIDRandActiveDeleted");

            entity.Property(e => e.CareCyclePhysicianId).HasColumnName("CareCyclePhysicianID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.CareCycleId).HasColumnName("CareCycleID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastSynced).HasColumnType("datetime");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OptIn).HasDefaultValue(true);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.OrganizationLocationId).HasColumnName("OrganizationLocationID");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientPhysicianId).HasColumnName("PatientPhysicianID");
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.PhysicianLocationId).HasColumnName("PhysicianLocationID");
            entity.Property(e => e.PhysicianType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Relationship)
                .HasMaxLength(500)
                .IsUnicode(false);

            entity.HasOne(d => d.CareCycle).WithMany(p => p.CareCyclePhysicians)
                .HasForeignKey(d => d.CareCycleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CareCyclePhysician_CareCycles");

            entity.HasOne(d => d.Patient).WithMany(p => p.CareCyclePhysicians)
                .HasForeignKey(d => d.PatientId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CareCyclePhysician_Patients");

            entity.HasOne(d => d.Physician).WithMany(p => p.CareCyclePhysicians)
                .HasForeignKey(d => d.PhysicianId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CareCyclePhysician_Physicians");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CareCyclePhysician> entity);
    }
}
