// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class ReimbursementEnrollmentFormConfiguration : IEntityTypeConfiguration<ReimbursementEnrollmentForm>
    {
        public void Configure(EntityTypeBuilder<ReimbursementEnrollmentForm> entity)
        {
            entity.HasKey(e => e.RecordId);

            entity.ToTable("ReimbursementEnrollmentForm");

            entity.Property(e => e.RecordId).HasColumnName("RecordID");
            entity.Property(e => e.AdditionalComments)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.AltContactFullName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.BestContactMethod)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.BridgeMnthmg)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.BridgeWkmg)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Bsa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("BSA");
            entity.Property(e => e.Checksum).HasMaxLength(500);
            entity.Property(e => e.ChemoTargetedTherapyOther)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalTnmstageOtherStr)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ClinicalTNMStageOtherStr");
            entity.Property(e => e.ContactAddress)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactEmail)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ContactEMail");
            entity.Property(e => e.ContactFax)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.ContactPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ContactPhoneExt)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.ContactState)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.ContactTitle)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactZip)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.DeashipTo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DEAShipTo");
            entity.Property(e => e.Diagnosis1Date).HasColumnType("datetime");
            entity.Property(e => e.DiagnosisOtherDescription)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Dose1DaysSupply)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Dose1Frequncy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Dose2DaysSupply)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Dose2Frequncy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Dose3DaysSupply)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Dose3Frequncy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Drug)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EHipaaFileId).HasColumnName("eHipaaFileId");
            entity.Property(e => e.FileId).HasColumnName("FileID");
            entity.Property(e => e.Height)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Icd10code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ICD10Code");
            entity.Property(e => e.InjectQuantity10mg).HasMaxLength(100);
            entity.Property(e => e.InjectQuantity20mg).HasMaxLength(100);
            entity.Property(e => e.InjectQuantity25mg)
                .HasMaxLength(100)
                .HasColumnName("InjectQuantity2_5mg");
            entity.Property(e => e.InjectQuantity40mg).HasMaxLength(100);
            entity.Property(e => e.InjectRefills10mg).HasMaxLength(50);
            entity.Property(e => e.InjectRefills20mg).HasMaxLength(50);
            entity.Property(e => e.InjectRefills25mg)
                .HasMaxLength(50)
                .HasColumnName("InjectRefills2_5mg");
            entity.Property(e => e.InjectRefills40mg).HasMaxLength(50);
            entity.Property(e => e.InjectTimePerWeek10mg).HasMaxLength(100);
            entity.Property(e => e.InjectTimePerWeek20mg).HasMaxLength(100);
            entity.Property(e => e.InjectTimePerWeek25mg)
                .HasMaxLength(100)
                .HasColumnName("InjectTimePerWeek2_5mg");
            entity.Property(e => e.InjectTimePerWeek40mg).HasMaxLength(100);
            entity.Property(e => e.Ipaddress)
                .HasMaxLength(20)
                .HasColumnName("IPAddress");
            entity.Property(e => e.Ipsshigh).HasColumnName("IPSSHigh");
            entity.Property(e => e.Ipssintermediate).HasColumnName("IPSSIntermediate");
            entity.Property(e => e.Ipssintermediate1).HasColumnName("IPSSIntermediate1");
            entity.Property(e => e.Ipssrhigh).HasColumnName("IPSSRHigh");
            entity.Property(e => e.Ipssrintermediate).HasColumnName("IPSSRIntermediate");
            entity.Property(e => e.IpssrveryHigh).HasColumnName("IPSSRVeryHigh");
            entity.Property(e => e.IsAutoInjectFillAtSp).HasColumnName("IsAutoInjectFillAtSP");
            entity.Property(e => e.IsInject25mgSyringe).HasColumnName("IsInject2_5mgSyringe");
            entity.Property(e => e.IsNewPatient).HasColumnName("isNewPatient");
            entity.Property(e => e.IsNkda).HasColumnName("IsNKDA");
            entity.Property(e => e.IsPalynziq25mg).HasColumnName("IsPalynziq2_5mg");
            entity.Property(e => e.IsPalynziq25mgSyringe).HasColumnName("IsPalynziq2_5mgSyringe");
            entity.Property(e => e.IsPatientReferralToPap).HasColumnName("IsPatientReferralToPAP");
            entity.Property(e => e.IsPimaryParticipating).HasColumnName("isPimaryParticipating");
            entity.Property(e => e.IsPowder).HasColumnName("isPowder");
            entity.Property(e => e.IsPreMedFillAtSp).HasColumnName("IsPreMedFillAtSP");
            entity.Property(e => e.IsPrimaryChampusTriCare).HasColumnName("isPrimaryChampusTriCARE");
            entity.Property(e => e.IsPrimaryCommercial).HasColumnName("isPrimaryCommercial");
            entity.Property(e => e.IsPrimaryMedicaid).HasColumnName("isPrimaryMedicaid");
            entity.Property(e => e.IsPrimaryMedicare).HasColumnName("isPrimaryMedicare");
            entity.Property(e => e.IsPrimaryNonParticipating).HasColumnName("isPrimaryNonParticipating");
            entity.Property(e => e.IsPrimaryWorkerCompensation).HasColumnName("isPrimaryWorkerCompensation");
            entity.Property(e => e.IsSecondaryChampusTriCare).HasColumnName("isSecondaryChampusTriCARE");
            entity.Property(e => e.IsSecondaryCommercial).HasColumnName("isSecondaryCommercial");
            entity.Property(e => e.IsSecondaryMedicaid).HasColumnName("isSecondaryMedicaid");
            entity.Property(e => e.IsSecondaryMedicare).HasColumnName("isSecondaryMedicare");
            entity.Property(e => e.IsSecondaryNonParticipating).HasColumnName("isSecondaryNonParticipating");
            entity.Property(e => e.IsSecondaryParticipating).HasColumnName("isSecondaryParticipating");
            entity.Property(e => e.IsSecondaryWorkerCompensation).HasColumnName("isSecondaryWorkerCompensation");
            entity.Property(e => e.IsTablet).HasColumnName("isTablet");
            entity.Property(e => e.IsTreatmentAsc).HasColumnName("isTreatmentASC");
            entity.Property(e => e.IsTreatmentHospitalInpaitient).HasColumnName("isTreatmentHospitalInpaitient");
            entity.Property(e => e.IsTreatmentHospitalOutpatient).HasColumnName("isTreatmentHospitalOutpatient");
            entity.Property(e => e.IsTreatmentOther).HasColumnName("isTreatmentOther");
            entity.Property(e => e.IsTreatmentPhysicianOffice).HasColumnName("isTreatmentPhysicianOffice");
            entity.Property(e => e.KnownAllergies)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LoginAs)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MedicaidId)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MedicalHistory)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MedicationDirection)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.MiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MonthlyMg)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.MonthlyRefills)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Notes)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.NumberOfTabletsPerCycle)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.OtherDiagnosisDescription)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Pal60mgCustomFrequency)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pal60mgCustomQuantity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pal60mgCustomRefills)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pal60mgCustomUnit)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pal60mgRecommendQuantity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pal60mgRecommendRefills)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PalInductionCustomRefills)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PalTitraCustomRefills)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PalynziqCustomUnitInduction)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PalynziqCustomUnit_Induction");
            entity.Property(e => e.PalynziqCustomUnitMaintain)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PalynziqCustomUnit_Maintain");
            entity.Property(e => e.PalynziqCustomUnitMax)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PalynziqCustomUnit_Max");
            entity.Property(e => e.PalynziqCustomUnitTitra)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PalynziqCustomUnit_Titra");
            entity.Property(e => e.PalynziqQuantity10mg).HasMaxLength(100);
            entity.Property(e => e.PalynziqQuantity20mg).HasMaxLength(100);
            entity.Property(e => e.PalynziqQuantity25mg)
                .HasMaxLength(100)
                .HasColumnName("PalynziqQuantity2_5mg");
            entity.Property(e => e.PalynziqQuantity40mg).HasMaxLength(100);
            entity.Property(e => e.PalynziqRefills10mg).HasMaxLength(50);
            entity.Property(e => e.PalynziqRefills20mg).HasMaxLength(50);
            entity.Property(e => e.PalynziqRefills25mg)
                .HasMaxLength(50)
                .HasColumnName("PalynziqRefills2_5mg");
            entity.Property(e => e.PalynziqRefills40mg).HasMaxLength(50);
            entity.Property(e => e.PapPatientSignature).IsUnicode(false);
            entity.Property(e => e.PapPatientSignatureDate).HasColumnType("datetime");
            entity.Property(e => e.PapPatientSignatureName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PapPhysicianSignature).IsUnicode(false);
            entity.Property(e => e.PapPhysicianSignatureDate).HasColumnType("datetime");
            entity.Property(e => e.PapPhysicianSignatureName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PapTakeOther)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.PapWeight).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ParentGuardianName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress1).HasMaxLength(100);
            entity.Property(e => e.PatientAddress2).HasMaxLength(100);
            entity.Property(e => e.PatientAddressId).HasColumnName("PatientAddressID");
            entity.Property(e => e.PatientAltContactEmail)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAnnualHouseholdIncome).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.PatientBestTimeToContact)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientCellPhone).HasMaxLength(50);
            entity.Property(e => e.PatientCity).HasMaxLength(50);
            entity.Property(e => e.PatientContactPhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientDob).HasColumnName("PatientDOB");
            entity.Property(e => e.PatientDriverLicense)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientDriverLicenseState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientEap).HasColumnName("PatientEAP");
            entity.Property(e => e.PatientEmail).HasMaxLength(100);
            entity.Property(e => e.PatientFaxNumber).HasMaxLength(50);
            entity.Property(e => e.PatientFirstName).HasMaxLength(50);
            entity.Property(e => e.PatientGender).HasMaxLength(20);
            entity.Property(e => e.PatientHomePhone).HasMaxLength(50);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientLastName).HasMaxLength(50);
            entity.Property(e => e.PatientPhoneNumber).HasMaxLength(50);
            entity.Property(e => e.PatientPreferredPhoneType).HasMaxLength(20);
            entity.Property(e => e.PatientPrefix).HasMaxLength(20);
            entity.Property(e => e.PatientPrimaryContact).HasMaxLength(50);
            entity.Property(e => e.PatientPrimaryContactRelationship).HasMaxLength(50);
            entity.Property(e => e.PatientPrimaryLanguage)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientSecondaryContact)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientSignature).IsUnicode(false);
            entity.Property(e => e.PatientSignatureDate).HasColumnType("datetime");
            entity.Property(e => e.PatientSignatureName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientSignatureRelationship)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientSsn)
                .HasMaxLength(20)
                .HasColumnName("PatientSSN");
            entity.Property(e => e.PatientState).HasMaxLength(20);
            entity.Property(e => e.PatientStudySite)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientSuffix).HasMaxLength(20);
            entity.Property(e => e.PatientWorkPhone).HasMaxLength(50);
            entity.Property(e => e.PatientZip)
                .HasMaxLength(20)
                .HasColumnName("PatientZIP");
            entity.Property(e => e.PayerSpecificId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PayerSpecificID");
            entity.Property(e => e.Pdf).HasColumnName("PDF");
            entity.Property(e => e.PharmacyCvsCaremark).HasColumnName("PharmacyCVS_Caremark");
            entity.Property(e => e.PharmacyCvsspeciality).HasColumnName("PharmacyCVSSpeciality");
            entity.Property(e => e.PharmacyInsuranceBin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PharmacyInsuranceBIN");
            entity.Property(e => e.PharmacyInsuranceGroupId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PharmacyInsuranceGroupID");
            entity.Property(e => e.PharmacyInsuranceMemberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PharmacyInsuranceMemberID");
            entity.Property(e => e.PharmacyInsurancePcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PharmacyInsurancePCN");
            entity.Property(e => e.PharmacyInsurancePhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyInsurancePlanName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyInsurancePolicyId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PharmacyInsurancePolicyID");
            entity.Property(e => e.PharmacyIvsolutions).HasColumnName("PharmacyIVSolutions");
            entity.Property(e => e.PharmacyName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyTlcrx).HasColumnName("PharmacyTLCRx");
            entity.Property(e => e.PreferPharmacyAddress)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PreferPharmacyContact)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PreferPharmacyName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PreferPharmacyPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PreferPhrarmacyCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PreferPhrarmacyState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PreferPhrarmacyStoreLocation)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PreferPhrarmacyZip)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PreferredPharmacy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PrescOtherSpeciality)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryInsuranceInformationChanged)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryInsuranceType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryMedicalInsuranceAddress).HasMaxLength(100);
            entity.Property(e => e.PrimaryMedicalInsuranceBin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PrimaryMedicalInsuranceBIN");
            entity.Property(e => e.PrimaryMedicalInsuranceCardHolderDob).HasColumnName("PrimaryMedicalInsuranceCardHolderDOB");
            entity.Property(e => e.PrimaryMedicalInsuranceCardHolderName).HasMaxLength(100);
            entity.Property(e => e.PrimaryMedicalInsuranceCity).HasMaxLength(50);
            entity.Property(e => e.PrimaryMedicalInsuranceEmployerName).HasMaxLength(100);
            entity.Property(e => e.PrimaryMedicalInsuranceFax).HasMaxLength(50);
            entity.Property(e => e.PrimaryMedicalInsuranceGroupNumber).HasMaxLength(50);
            entity.Property(e => e.PrimaryMedicalInsuranceId).HasColumnName("PrimaryMedicalInsuranceID");
            entity.Property(e => e.PrimaryMedicalInsuranceName).HasMaxLength(100);
            entity.Property(e => e.PrimaryMedicalInsurancePcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PrimaryMedicalInsurancePCN");
            entity.Property(e => e.PrimaryMedicalInsurancePhone).HasMaxLength(50);
            entity.Property(e => e.PrimaryMedicalInsurancePolicyId)
                .HasMaxLength(50)
                .HasColumnName("PrimaryMedicalInsurancePolicyID");
            entity.Property(e => e.PrimaryMedicalInsuranceProviderNpi)
                .HasMaxLength(50)
                .HasColumnName("PrimaryMedicalInsuranceProviderNPI");
            entity.Property(e => e.PrimaryMedicalInsuranceRelationshipToPatient).HasMaxLength(100);
            entity.Property(e => e.PrimaryMedicalInsuranceSsn)
                .HasMaxLength(20)
                .HasColumnName("PrimaryMedicalInsuranceSSN");
            entity.Property(e => e.PrimaryMedicalInsuranceState).HasMaxLength(20);
            entity.Property(e => e.PrimaryMedicalInsuranceType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryMedicalInsuranceZip).HasMaxLength(20);
            entity.Property(e => e.PrimaryMedicalPatientInsuranceId).HasColumnName("PrimaryMedicalPatientInsuranceID");
            entity.Property(e => e.PriorTherapy)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ProviderAddress1).HasMaxLength(100);
            entity.Property(e => e.ProviderAddress2).HasMaxLength(100);
            entity.Property(e => e.ProviderAddressContact).HasMaxLength(100);
            entity.Property(e => e.ProviderAddressContactMethod).HasMaxLength(50);
            entity.Property(e => e.ProviderAddressContactPhone).HasMaxLength(50);
            entity.Property(e => e.ProviderAddressEmail).HasMaxLength(100);
            entity.Property(e => e.ProviderAddressFax).HasMaxLength(50);
            entity.Property(e => e.ProviderAddressHospital).HasMaxLength(100);
            entity.Property(e => e.ProviderAddressId).HasColumnName("ProviderAddressID");
            entity.Property(e => e.ProviderAddressName).HasMaxLength(100);
            entity.Property(e => e.ProviderAddressPhone).HasMaxLength(50);
            entity.Property(e => e.ProviderAddressSpecialty).HasMaxLength(100);
            entity.Property(e => e.ProviderCity).HasMaxLength(100);
            entity.Property(e => e.ProviderContact)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderDea)
                .HasMaxLength(100)
                .HasColumnName("ProviderDEA");
            entity.Property(e => e.ProviderEmail).HasMaxLength(100);
            entity.Property(e => e.ProviderFacilityName).HasMaxLength(100);
            entity.Property(e => e.ProviderFaxNumber).HasMaxLength(50);
            entity.Property(e => e.ProviderFirstName).HasMaxLength(100);
            entity.Property(e => e.ProviderFullName)
                .HasMaxLength(110)
                .IsUnicode(false);
            entity.Property(e => e.ProviderId).HasColumnName("ProviderID");
            entity.Property(e => e.ProviderIndividualCompletingForm).HasMaxLength(100);
            entity.Property(e => e.ProviderLastName).HasMaxLength(100);
            entity.Property(e => e.ProviderLicenseState)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProviderMedicaidId)
                .HasMaxLength(20)
                .IsFixedLength()
                .HasColumnName("ProviderMedicaidID");
            entity.Property(e => e.ProviderMiddleName).HasMaxLength(50);
            entity.Property(e => e.ProviderNpi)
                .HasMaxLength(50)
                .HasColumnName("ProviderNPI");
            entity.Property(e => e.ProviderPhoneNumber).HasMaxLength(50);
            entity.Property(e => e.ProviderPhoneNumber2).HasMaxLength(50);
            entity.Property(e => e.ProviderPhoneNumber2Ext).HasMaxLength(50);
            entity.Property(e => e.ProviderPhoneNumberExt).HasMaxLength(50);
            entity.Property(e => e.ProviderSpecialty)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderState).HasMaxLength(100);
            entity.Property(e => e.ProviderStateLicense)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ProviderStateMedicalLic)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderTaxId)
                .HasMaxLength(100)
                .HasColumnName("ProviderTaxID");
            entity.Property(e => e.ProviderTitle)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderUpin)
                .HasMaxLength(50)
                .HasColumnName("ProviderUPIN");
            entity.Property(e => e.ProviderZip)
                .HasMaxLength(20)
                .HasColumnName("ProviderZIP");
            entity.Property(e => e.ProviderxDea)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ProviderxDEA");
            entity.Property(e => e.ReferralStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RegPatientSignature).IsUnicode(false);
            entity.Property(e => e.RegPatientSignatureDate).HasColumnType("datetime");
            entity.Property(e => e.RegPatientSignatureName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RegPhysicianSignature).IsUnicode(false);
            entity.Property(e => e.RegPhysicianSignatureDate).HasColumnType("datetime");
            entity.Property(e => e.RegPhysicianSignatureName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RegTakeOther)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.RegWeight).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.SecondaryAddress1).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddress2).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddressCity).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddressContact).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddressContactMethod).HasMaxLength(50);
            entity.Property(e => e.SecondaryAddressContactPhone).HasMaxLength(50);
            entity.Property(e => e.SecondaryAddressEmail).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddressFax).HasMaxLength(50);
            entity.Property(e => e.SecondaryAddressHospital).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddressName).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddressPhone).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddressSpecialty).HasMaxLength(100);
            entity.Property(e => e.SecondaryAddressState).HasMaxLength(50);
            entity.Property(e => e.SecondaryAddressZip).HasMaxLength(50);
            entity.Property(e => e.SecondaryInsuranceInformationChanged)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryInsuranceType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryMedicalInsuranceAddress).HasMaxLength(100);
            entity.Property(e => e.SecondaryMedicalInsuranceBin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SecondaryMedicalInsuranceBIN");
            entity.Property(e => e.SecondaryMedicalInsuranceCardHolderDob).HasColumnName("SecondaryMedicalInsuranceCardHolderDOB");
            entity.Property(e => e.SecondaryMedicalInsuranceCardHolderName).HasMaxLength(50);
            entity.Property(e => e.SecondaryMedicalInsuranceCity).HasMaxLength(50);
            entity.Property(e => e.SecondaryMedicalInsuranceEmployerName).HasMaxLength(100);
            entity.Property(e => e.SecondaryMedicalInsuranceFax).HasMaxLength(20);
            entity.Property(e => e.SecondaryMedicalInsuranceGroupNumber).HasMaxLength(50);
            entity.Property(e => e.SecondaryMedicalInsuranceId).HasColumnName("SecondaryMedicalInsuranceID");
            entity.Property(e => e.SecondaryMedicalInsuranceName).HasMaxLength(100);
            entity.Property(e => e.SecondaryMedicalInsurancePcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SecondaryMedicalInsurancePCN");
            entity.Property(e => e.SecondaryMedicalInsurancePhone).HasMaxLength(20);
            entity.Property(e => e.SecondaryMedicalInsurancePolicyId)
                .HasMaxLength(50)
                .HasColumnName("SecondaryMedicalInsurancePolicyID");
            entity.Property(e => e.SecondaryMedicalInsuranceProviderNpi)
                .HasMaxLength(50)
                .HasColumnName("SecondaryMedicalInsuranceProviderNPI");
            entity.Property(e => e.SecondaryMedicalInsuranceRelationshipToPatient).HasMaxLength(50);
            entity.Property(e => e.SecondaryMedicalInsuranceSsn)
                .HasMaxLength(20)
                .HasColumnName("SecondaryMedicalInsuranceSSN");
            entity.Property(e => e.SecondaryMedicalInsuranceState).HasMaxLength(20);
            entity.Property(e => e.SecondaryMedicalInsuranceType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryMedicalInsuranceZip).HasMaxLength(20);
            entity.Property(e => e.SecondaryMedicalPatientInsuranceId).HasColumnName("SecondaryMedicalPatientInsuranceID");
            entity.Property(e => e.ShipmentClinicEmail).HasMaxLength(100);
            entity.Property(e => e.ShipmentClinicPointOfContact).HasMaxLength(100);
            entity.Property(e => e.ShipmentClinicPointOfContactPhone).HasMaxLength(100);
            entity.Property(e => e.ShipmentOtherDescription).HasMaxLength(50);
            entity.Property(e => e.ShipmentShipToAddress).HasMaxLength(100);
            entity.Property(e => e.ShipmentState).HasMaxLength(50);
            entity.Property(e => e.ShipmentWeeks).HasMaxLength(50);
            entity.Property(e => e.ShipmentZip)
                .HasMaxLength(50)
                .HasColumnName("ShipmentZIP");
            entity.Property(e => e.Signature).IsUnicode(false);
            entity.Property(e => e.Signature2).IsUnicode(false);
            entity.Property(e => e.SignatureDate).HasColumnType("datetime");
            entity.Property(e => e.SignatureDate2).HasColumnType("datetime");
            entity.Property(e => e.SignatureName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SignatureName2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SpecialDeliveryInstructions)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.SpecialDeliveryInstructions2)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.SrType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Therapy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TherapyType).HasMaxLength(50);
            entity.Property(e => e.TreatAllergyKnown)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.TreatBaselinePhe)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.TreatIsBh4).HasColumnName("TreatIsBH4");
            entity.Property(e => e.TreatIsClassicPku).HasColumnName("TreatIsClassicPKU");
            entity.Property(e => e.TreatIsE701).HasColumnName("TreatIsE70_1");
            entity.Property(e => e.TreatOther)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.TreatOtherMed)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.TreatPheOther)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.Treatment10000UnitCount).HasMaxLength(50);
            entity.Property(e => e.Treatment2500UnitCount).HasMaxLength(50);
            entity.Property(e => e.Treatment5000UnitCount).HasMaxLength(50);
            entity.Property(e => e.TreatmentClinicalTnmstageMetastaticColorectalCancer).HasColumnName("TreatmentClinicalTNMStageMetastaticColorectalCancer");
            entity.Property(e => e.TreatmentClinicalTnmstageMetastaticGastricCancer).HasColumnName("TreatmentClinicalTNMStageMetastaticGastricCancer");
            entity.Property(e => e.TreatmentClinicalTnmstageOther).HasColumnName("TreatmentClinicalTNMStageOther");
            entity.Property(e => e.TreatmentCptcode)
                .HasMaxLength(100)
                .HasColumnName("TreatmentCPTCode");
            entity.Property(e => e.TreatmentCptcode2)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TreatmentCPTCode2");
            entity.Property(e => e.TreatmentCptcode3)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TreatmentCPTCode3");
            entity.Property(e => e.TreatmentCptcode4)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TreatmentCPTCode4");
            entity.Property(e => e.TreatmentCptcode5)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TreatmentCPTCode5");
            entity.Property(e => e.TreatmentDateOfService).HasColumnType("datetime");
            entity.Property(e => e.TreatmentDatePreTherapy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TreatmentDate_PreTherapy");
            entity.Property(e => e.TreatmentDateTaken1).HasColumnType("datetime");
            entity.Property(e => e.TreatmentDateTaken2).HasColumnType("datetime");
            entity.Property(e => e.TreatmentDiagnosisCodePrimary1).HasMaxLength(100);
            entity.Property(e => e.TreatmentDiagnosisCodePrimary2).HasMaxLength(100);
            entity.Property(e => e.TreatmentDiagnosisCodePrimary3)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentDiagnosisCodePrimary4)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentDiagnosisCodePrimary5)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentDose)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentDose2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentDrugAllergies)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentEgfrtestCompleted).HasColumnName("TreatmentEGFRTestCompleted");
            entity.Property(e => e.TreatmentEgfrtestResult)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TreatmentEGFRTestResult");
            entity.Property(e => e.TreatmentEmgcode)
                .HasMaxLength(100)
                .HasColumnName("TreatmentEMGCode");
            entity.Property(e => e.TreatmentFiveFu).HasColumnName("TreatmentFiveFU");
            entity.Property(e => e.TreatmentFolfiri).HasColumnName("TreatmentFOLFIRI");
            entity.Property(e => e.TreatmentFolfox).HasColumnName("TreatmentFOLFOX");
            entity.Property(e => e.TreatmentFolfoxiri).HasColumnName("TreatmentFOLFOXIRI");
            entity.Property(e => e.TreatmentFrequency)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentFrequency2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentHer2testCompleted).HasColumnName("TreatmentHER-2TestCompleted");
            entity.Property(e => e.TreatmentHer2testResult)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TreatmentHER-2TestResult");
            entity.Property(e => e.TreatmentHistory)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentIsLhrhdeficiency).HasColumnName("TreatmentIsLHRHDeficiency");
            entity.Property(e => e.TreatmentKrasstatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TreatmentKRASStatus");
            entity.Property(e => e.TreatmentLast4digitsOfNdc)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("TreatmentLast4digitsOfNDC");
            entity.Property(e => e.TreatmentLineOfTherapyOtherStr)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentMsiHtestCompleted).HasColumnName("TreatmentMSI-HTestCompleted");
            entity.Property(e => e.TreatmentMsiHtestResult)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TreatmentMSI-HTestResult");
            entity.Property(e => e.TreatmentOneTabAday).HasColumnName("TreatmentOneTabADay");
            entity.Property(e => e.TreatmentOther)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentPatientDosage).HasMaxLength(50);
            entity.Property(e => e.TreatmentPatientDosage2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentPatientDosage3)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentPreTherapy)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentPrescriptionStrengthPrescribed)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentQuantity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentQuantity2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentRefRange1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentRefRange2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentRefills)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentRxType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentSig)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TreatmentSIG");
            entity.Property(e => e.TreatmentSigother).HasColumnName("TreatmentSIGOther");
            entity.Property(e => e.TreatmentSigotherDesc)
                .HasMaxLength(100)
                .HasColumnName("TreatmentSIGOtherDesc");
            entity.Property(e => e.TreatmentSpecialInstructions)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentStartDateFill).HasColumnName("TreatmentStart_Date_Fill");
            entity.Property(e => e.TreatmentSymptom)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentTabletsPerCycle)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentTabletsPerCycle2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentTestosteroneLevel1)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentTestosteroneLevel2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentTestosteroneLevels)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TreatmentdMmrtestCompleted).HasColumnName("TreatmentdMMRTestCompleted");
            entity.Property(e => e.TreatmentdMmrtestResult)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TreatmentdMMRTestResult");
            entity.Property(e => e.Updated).HasColumnType("datetime");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.WeeklyMg)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.WeeklyRefills)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Weight)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Wpsshigh).HasColumnName("WPSSHigh");
            entity.Property(e => e.WpssveryHigh).HasColumnName("WPSSVeryHigh");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<ReimbursementEnrollmentForm> entity);
    }
}
