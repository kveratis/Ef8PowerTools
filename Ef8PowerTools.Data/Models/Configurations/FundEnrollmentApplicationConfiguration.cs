// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class FundEnrollmentApplicationConfiguration : IEntityTypeConfiguration<FundEnrollmentApplication>
    {
        public void Configure(EntityTypeBuilder<FundEnrollmentApplication> entity)
        {
            entity.ToTable(tb => tb.HasTrigger("utFundEnrollmentApplications"));

            entity.HasIndex(e => new { e.EnrollmentType, e.CreatedBy, e.SubmitDate, e.Deleted, e.ApplicationState }, "ix_FundEnrollmentApplications_EnrollmentType_CreatedBy_SubmitDate_Deleted_ApplicationState_includes");

            entity.HasIndex(e => new { e.EnrollmentType, e.FundId, e.PatientId, e.ApplicationState, e.Deleted }, "ix_FundEnrollmentApplications_EnrollmentType_FundId_PatientID_ApplicationState_Deleted");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.PatientId, e.EnrollmentType, e.SubmitDate }, "ix_FundEnrollmentApplications_ProgramID_Deleted_PatientID_EnrollmentType_SubmitDate");

            entity.HasIndex(e => new { e.ServiceRequestId, e.Deleted }, "ix_FundEnrollmentApplications_ServiceRequestID_Deleted");

            entity.Property(e => e.FundEnrollmentApplicationId)
                .ValueGeneratedNever()
                .HasColumnName("FundEnrollmentApplicationID");
            entity.Property(e => e.ApplicantCareMetxRecordId).HasColumnName("ApplicantCareMetxRecordID");
            entity.Property(e => e.ApplicantCareMetxRecordType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ApplyingFor)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ApproveComments)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.ApproveDate).HasColumnType("datetime");
            entity.Property(e => e.AssistanceFromOtherFoundation)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AttestationDate).HasColumnType("datetime");
            entity.Property(e => e.AttestationRecordingId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("AttestationRecordingID");
            entity.Property(e => e.AttestationSource)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AttestationType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CallerFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CallerLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CallerMiddleName)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CallerPhoneNumber)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.CallerType)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.ContactNotifyOptOut).HasMaxLength(1);
            entity.Property(e => e.CreateSource)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EnrollmentType)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.FacilityAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityFax)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.FacilityName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FacilityPhone)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.FacilityState)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.FacilityZip)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.FirstNameOnCard)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasDefaultValueSql("(NULL)");
            entity.Property(e => e.FundName)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.FundReopenSubscriptionOptedOutDate).HasColumnType("datetime");
            entity.Property(e => e.GrossHouseholdIncome).HasColumnType("money");
            entity.Property(e => e.HasCommercialInsurance).HasColumnName("hasCommercialInsurance");
            entity.Property(e => e.HasInsurance).HasColumnName("hasInsurance");
            entity.Property(e => e.HasMedicare).HasColumnName("hasMedicare");
            entity.Property(e => e.HowHear)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.InsuranceDefinitions).HasMaxLength(100);
            entity.Property(e => e.IsAuthorizedContactOpted).HasColumnName("isAuthorizedContactOpted");
            entity.Property(e => e.IsNoEmailProvidedOpted).HasColumnName("isNoEmailProvidedOpted");
            entity.Property(e => e.IsNoSsnopted).HasColumnName("isNoSSNOpted");
            entity.Property(e => e.IsUsresident).HasColumnName("isUSResident");
            entity.Property(e => e.LastNameOnCard)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasDefaultValueSql("(NULL)");
            entity.Property(e => e.LastSectionViewed)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdateSource)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OptOutOrganization).HasDefaultValue(false);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.PatientAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientContactEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientContactFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientContactLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientContactName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientContactPhone)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PatientContactRelationship)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientDob).HasColumnName("PatientDOB");
            entity.Property(e => e.PatientEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientEmploymentStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientGender)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.PatientGrantId).HasColumnName("PatientGrantID");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientMiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientPhone)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PatientPreferredCommunicationMethod)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientPreferredLanguage)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientReceiveTreatmentAt)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.PatientSsn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PatientSSN");
            entity.Property(e => e.PatientSsnlastFourDigits)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("PatientSSNLastFourDigits");
            entity.Property(e => e.PatientState)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PatientZip)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.PhysicianLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianMiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianNotifyOptOut).HasMaxLength(1);
            entity.Property(e => e.PhysicianNpi)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("PhysicianNPI");
            entity.Property(e => e.PhysicianPhone)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianPreferredCommunicationMethod)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianSpecialty)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianSpecialtyId).HasColumnName("PhysicianSpecialtyID");
            entity.Property(e => e.PhysicianStateLicenseNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescreenComments)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.PrescreenDate)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.PrescreenDenialMessage).HasMaxLength(100);
            entity.Property(e => e.PrescreenPassed).HasDefaultValue(true);
            entity.Property(e => e.PrimaryInsuranceType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProcessedDate).HasColumnType("datetime");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.RepLastSectionViewed)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.ShippingAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ShippingAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ShippingCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ShippingFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ShippingLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ShippingState)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.ShippingZip)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.SubmitDate).HasColumnType("datetime");
            entity.Property(e => e.SubmitSource)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SubmittedBy)
                .HasMaxLength(50)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<FundEnrollmentApplication> entity);
    }
}
