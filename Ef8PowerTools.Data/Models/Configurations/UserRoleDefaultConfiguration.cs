// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class UserRoleDefaultConfiguration : IEntityTypeConfiguration<UserRoleDefault>
    {
        public void Configure(EntityTypeBuilder<UserRoleDefault> entity)
        {
            entity.Property(e => e.UserRoleDefaultId).HasColumnName("UserRoleDefaultID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DefaultAccess)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValue("N");
            entity.Property(e => e.FunctionId).HasColumnName("FunctionID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");

            entity.HasOne(d => d.Function).WithMany(p => p.UserRoleDefaults)
                .HasForeignKey(d => d.FunctionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserRoleDefaults_UserAccessFunctionList");

            entity.HasOne(d => d.Program).WithMany(p => p.UserRoleDefaults)
                .HasForeignKey(d => d.ProgramId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserRoleDefaults_Programs");

            entity.HasOne(d => d.UserRole).WithMany(p => p.UserRoleDefaults)
                .HasForeignKey(d => d.UserRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserRoleDefaults_UserRoleList");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<UserRoleDefault> entity);
    }
}
