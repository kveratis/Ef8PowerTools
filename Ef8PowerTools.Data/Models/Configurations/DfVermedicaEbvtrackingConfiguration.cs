// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DfVermedicaEbvtrackingConfiguration : IEntityTypeConfiguration<DfVermedicaEbvtracking>
    {
        public void Configure(EntityTypeBuilder<DfVermedicaEbvtracking> entity)
        {
            entity.HasKey(e => e.TrackingId);

            entity.ToTable("DF_Vermedica_EBVTracking");

            entity.Property(e => e.TrackingId).HasColumnName("TrackingID");
            entity.Property(e => e.AltCoverageReferral)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("altCoverageReferral");
            entity.Property(e => e.ClientPatientId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("clientPatientId");
            entity.Property(e => e.CopayCardProgram)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("copayCardProgram");
            entity.Property(e => e.CptCode1)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cptCode1");
            entity.Property(e => e.CptCode2)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cptCode2");
            entity.Property(e => e.CptCode3)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cptCode3");
            entity.Property(e => e.CptCode4)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cptCode4");
            entity.Property(e => e.CptCode5)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("cptCode5");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DateOfService)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("dateOfService");
            entity.Property(e => e.InternalReference)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("internalReference");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.MedicareId)
                .HasMaxLength(13)
                .IsUnicode(false)
                .HasColumnName("medicareId");
            entity.Property(e => e.Mfg)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("mfg");
            entity.Property(e => e.NextScheduledDate)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("nextScheduledDate");
            entity.Property(e => e.NoFaxingFlag)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("noFaxingFlag");
            entity.Property(e => e.PatientDob)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("patientDOB");
            entity.Property(e => e.PatientFirstName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("patientFirstName");
            entity.Property(e => e.PatientGender)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("patientGender");
            entity.Property(e => e.PatientLastName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("patientLastName");
            entity.Property(e => e.PatientSsn)
                .HasMaxLength(11)
                .IsUnicode(false)
                .HasColumnName("patientSSN");
            entity.Property(e => e.PatientZip)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("patientZip");
            entity.Property(e => e.Policy1policyMemberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy1policyMemberId");
            entity.Property(e => e.Policy1policyPatientSubscriber)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy1policyPatientSubscriber");
            entity.Property(e => e.Policy1policyPayerId)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy1policyPayerId");
            entity.Property(e => e.Policy1policyPayerName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("policy1policyPayerName");
            entity.Property(e => e.Policy1subscriberDob)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy1subscriberDOB");
            entity.Property(e => e.Policy1subscriberGender)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("policy1subscriberGender");
            entity.Property(e => e.Policy1subscriberLastName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy1subscriberLastName");
            entity.Property(e => e.Policy1subscriberMemberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy1subscriberMemberId");
            entity.Property(e => e.Policy1subscriberfirstName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy1subscriberfirstName");
            entity.Property(e => e.Policy2mcSuppPlanLetter)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("policy2mcSuppPlanLetter");
            entity.Property(e => e.Policy2policyMemberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy2policyMemberId");
            entity.Property(e => e.Policy2policyPatientSubscriber)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy2policyPatientSubscriber");
            entity.Property(e => e.Policy2policyPayerId)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy2policyPayerId");
            entity.Property(e => e.Policy2policyPayerName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Policy2subscriberDob)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy2subscriberDOB");
            entity.Property(e => e.Policy2subscriberFirstName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy2subscriberFirstName");
            entity.Property(e => e.Policy2subscriberGender)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("policy2subscriberGender");
            entity.Property(e => e.Policy2subscriberLastName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy2subscriberLastName");
            entity.Property(e => e.Policy2subscriberMemberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy2subscriberMemberId");
            entity.Property(e => e.Policy3policyMemberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy3policyMemberId");
            entity.Property(e => e.Policy3policyPatientSubscriber)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy3policyPatientSubscriber");
            entity.Property(e => e.Policy3policyPayerId)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy3policyPayerId");
            entity.Property(e => e.Policy3policyPayerName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Policy3subscriberDob)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("policy3subscriberDOB");
            entity.Property(e => e.Policy3subscriberFirstName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy3subscriberFirstName");
            entity.Property(e => e.Policy3subscriberGender)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("policy3subscriberGender");
            entity.Property(e => e.Policy3subscriberLastName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy3subscriberLastName");
            entity.Property(e => e.Policy3subscriberMemberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("policy3subscriberMemberId");
            entity.Property(e => e.Pos)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("pos");
            entity.Property(e => e.PracticeAddress1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("practiceAddress1");
            entity.Property(e => e.PracticeAddress2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("practiceAddress2");
            entity.Property(e => e.PracticeCity)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("practiceCity");
            entity.Property(e => e.PracticeContactFname)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("practiceContactFName");
            entity.Property(e => e.PracticeContactLname)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("practiceContactLName");
            entity.Property(e => e.PracticeFaxNumber)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("practiceFaxNumber");
            entity.Property(e => e.PracticeName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("practiceName");
            entity.Property(e => e.PracticeNpi)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("practiceNPI");
            entity.Property(e => e.PracticeState)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("practiceState");
            entity.Property(e => e.PracticeZip)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("practiceZip");
            entity.Property(e => e.PrimaryDiagnosis)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("primaryDiagnosis");
            entity.Property(e => e.Product)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("product");
            entity.Property(e => e.ProviderFirstName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("providerFirstName");
            entity.Property(e => e.ProviderLastName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("providerLastName");
            entity.Property(e => e.ProviderNpi)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("providerNPI");
            entity.Property(e => e.ProviderState)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("providerState");
            entity.Property(e => e.ProviderTaxId)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("providerTaxId");
            entity.Property(e => e.ProviderTitle)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasColumnName("providerTitle");
            entity.Property(e => e.ResponseId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ResponseID");
            entity.Property(e => e.ResponseMessage).HasColumnType("text");
            entity.Property(e => e.ResponseStatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryDiagnosis)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("secondaryDiagnosis");
            entity.Property(e => e.SiteOfficeFax)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("siteOfficeFax");
            entity.Property(e => e.TertiaryDiagnosis)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("tertiaryDiagnosis");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DfVermedicaEbvtracking> entity);
    }
}
