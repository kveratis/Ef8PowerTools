// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DispensesHistoryConfiguration : IEntityTypeConfiguration<DispensesHistory>
    {
        public void Configure(EntityTypeBuilder<DispensesHistory> entity)
        {
            entity.ToTable("Dispenses_History");

            entity.Property(e => e.DispensesHistoryId).HasColumnName("Dispenses_HistoryID");
            entity.Property(e => e.AlteraId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("AlteraID");
            entity.Property(e => e.BinNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CareCycleId).HasColumnName("CareCycleID");
            entity.Property(e => e.ContactName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CopayAmount).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.CopayCardAmountUsed).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.CopayCardId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CopayCardID");
            entity.Property(e => e.CopayPaid).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CustomField1)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CustomField2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CustomField3)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CustomField4)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CustomField5)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DeviceSerialNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Diagnosis)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Diagnosis2)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Diagnosis3)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DispendsesFromSpid).HasColumnName("Dispendses_fromSPID");
            entity.Property(e => e.DispenseData).HasColumnType("xml");
            entity.Property(e => e.DispenseId).HasColumnName("DispenseID");
            entity.Property(e => e.DoseType)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ExternalPatientId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalPatientID");
            entity.Property(e => e.ExternalSpname)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalSPName");
            entity.Property(e => e.FacilityAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FacilityState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityZip)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FemalePatientCategory)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FillNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FirstShipDate).HasColumnName("First_Ship_Date");
            entity.Property(e => e.Fnrptype)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("FNRPType");
            entity.Property(e => e.Frpcounseled)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FRPCounseled");
            entity.Property(e => e.FrppatientPregnant)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FRPPatientPregnant");
            entity.Property(e => e.FrppregnancyTest)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FRPPregnancyTest");
            entity.Property(e => e.GroupNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.InsurancePlanName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ItemName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastReceivedRxdate).HasColumnName("LastReceivedRXDate");
            entity.Property(e => e.LastSynced).HasColumnType("datetime");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Lftperformed)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("LFTPerformed");
            entity.Property(e => e.MajorMedicalName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Miligrams).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.MonthlyCounseled)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ndc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NDC");
            entity.Property(e => e.Notes)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OrderTransactionNum)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OrderType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.PaapprovalDate).HasColumnName("PAApprovalDate");
            entity.Property(e => e.Pacode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PACode");
            entity.Property(e => e.PaexpirationDate).HasColumnName("PAExpirationDate");
            entity.Property(e => e.Parequired).HasColumnName("PARequired");
            entity.Property(e => e.PastatusCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PAStatusCode");
            entity.Property(e => e.PatientAdr1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAdr2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientCopay).HasColumnType("numeric(8, 2)");
            entity.Property(e => e.PatientDob).HasColumnName("PatientDOB");
            entity.Property(e => e.PatientGender)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientPayAmount).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.PatientPhone)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.PatientPhysicianId).HasColumnName("Patient_PhysicianID");
            entity.Property(e => e.PatientState)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.PatientZip)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PayerName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PayerType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pbmname)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMName");
            entity.Property(e => e.Pcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PCN");
            entity.Property(e => e.PharmaCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyDea)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PharmacyDEA");
            entity.Property(e => e.PharmacyNcpdp)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PharmacyNCPDP");
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.PrescriberNotifiedLft)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PrescriberNotifiedLFT");
            entity.Property(e => e.PrescriberNotifiedPreg)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberNotifiedType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryClaimType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryCoverageType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProductLot)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ProviderAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderDea)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ProviderDEA");
            entity.Property(e => e.ProviderFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderNpi)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("ProviderNPI");
            entity.Property(e => e.ProviderPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ProviderSpecialty)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProviderState)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.ProviderZip)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ProviderZIP");
            entity.Property(e => e.Quantity).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.ReasonForChange)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.RecordDateTime).HasColumnType("datetime");
            entity.Property(e => e.ReferralDate).HasColumnType("datetime");
            entity.Property(e => e.ReferralNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RefillRemaining).HasColumnType("decimal(8, 0)");
            entity.Property(e => e.RestatementFlag)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.RxLabelInfo)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.RxNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RxfilledOrCancellationDate).HasColumnName("RXFilledOrCancellationDate");
            entity.Property(e => e.ScCfcenterId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("SC_CFCenterID");
            entity.Property(e => e.ScCfcenterName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SC_CFCenterName");
            entity.Property(e => e.SecondaryPayerBinNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryPayerGroupNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryPayerName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryPayerPcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SecondaryPayerPCN");
            entity.Property(e => e.SecondaryPayerType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ShipCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ShipState)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.ShipTo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ShipZipcode)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("ShipZIPCode");
            entity.Property(e => e.ShippingCarrier)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SourceId).HasColumnName("SourceID");
            entity.Property(e => e.SpCfcenterId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("SP_CFCenterID");
            entity.Property(e => e.SpProviderId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("SP_ProviderID");
            entity.Property(e => e.Spid).HasColumnName("SPID");
            entity.Property(e => e.Spnpi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SPNPI");
            entity.Property(e => e.SpreadyToShipDate).HasColumnName("SPReadyToShipDate");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TerritoryId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TerritoryID");
            entity.Property(e => e.TertiaryPayerBinNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TertiaryPayerGroupNo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TertiaryPayerName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TertiaryPayerPcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TertiaryPayerPCN");
            entity.Property(e => e.TertiaryPayerType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TrackingNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TransactionSequence)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TransferPharmacyName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UnitOfMeasure)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.WarehouseName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Weight).HasColumnType("decimal(10, 2)");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DispensesHistory> entity);
    }
}
