// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PatientConsentPerDrugConfiguration : IEntityTypeConfiguration<PatientConsentPerDrug>
    {
        public void Configure(EntityTypeBuilder<PatientConsentPerDrug> entity)
        {
            entity.HasKey(e => e.ConsentPerDrugId);

            entity.ToTable("PatientConsentPerDrug", tb =>
                {
                    tb.HasTrigger("tr_Patients_ConsentPerDrugInsert");
                    tb.HasTrigger("tr_Patients_ConsentPerDrugUpdate");
                });

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.PatientId, e.ConsentReceived, e.OptOut, e.ConsentManuExpDate, e.DrugName }, "PatientConsentPerDrug_IDX_Covering");

            entity.HasIndex(e => new { e.ProgramId, e.ConsentReceived, e.Deleted, e.ConsentManuExpDate }, "PatientConsentPerDrug_optoutInfo");

            entity.HasIndex(e => new { e.ProgramId, e.ConsentReceived, e.OptOut, e.Deleted, e.ConsentManuExpDate }, "ProgramID_ConsentReceived_OptOut_Deleted_Consent_Manu_ExpDate_Includes");

            entity.HasIndex(e => new { e.ProgramId, e.PatientId, e.Deleted }, "ProgramPatientID");

            entity.Property(e => e.ConsentPerDrugId).HasColumnName("ConsentPerDrugID");
            entity.Property(e => e.AttestationRecordingId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("AttestationRecordingID");
            entity.Property(e => e.ConsentDateManu).HasColumnName("ConsentDate_Manu");
            entity.Property(e => e.ConsentFormVersion)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("N/A");
            entity.Property(e => e.ConsentManuExpDate).HasColumnName("Consent_Manu_ExpDate");
            entity.Property(e => e.ConsentSource)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ConsentSourceSubtype)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("N/A");
            entity.Property(e => e.ConsentType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.DrugName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ExternalId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy).HasMaxLength(100);
            entity.Property(e => e.OptOutDate).HasColumnType("datetime");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PatientConsentPerDrug> entity);
    }
}
