// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class WhiteListEntitySettingConfiguration : IEntityTypeConfiguration<WhiteListEntitySetting>
    {
        public void Configure(EntityTypeBuilder<WhiteListEntitySetting> entity)
        {
            entity.HasKey(e => e.WhiteListEntitySettingsId);

            entity.Property(e => e.WhiteListEntitySettingsId).HasColumnName("WhiteListEntitySettingsID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdate).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Value)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.WhiteListChannelTypeId).HasColumnName("WhiteListChannelTypeID");
            entity.Property(e => e.WhiteListEntityId).HasColumnName("WhiteListEntityID");
            entity.Property(e => e.WhiteListItemId).HasColumnName("WhiteListItemID");

            entity.HasOne(d => d.WhiteListChannelType).WithMany(p => p.WhiteListEntitySettings)
                .HasForeignKey(d => d.WhiteListChannelTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WhiteListChannelType");

            entity.HasOne(d => d.WhiteListEntity).WithMany(p => p.WhiteListEntitySettings)
                .HasForeignKey(d => d.WhiteListEntityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WhiteListEntity");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WhiteListEntitySetting> entity);
    }
}
