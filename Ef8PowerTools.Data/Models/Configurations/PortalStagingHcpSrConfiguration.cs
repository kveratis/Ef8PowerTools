// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PortalStagingHcpSrConfiguration : IEntityTypeConfiguration<PortalStagingHcpSr>
    {
        public void Configure(EntityTypeBuilder<PortalStagingHcpSr> entity)
        {
            entity.HasKey(e => e.RequestId);

            entity.ToTable("Portal_Staging_HCP_SR");

            entity.Property(e => e.RequestId).HasColumnName("RequestID");
            entity.Property(e => e.AccountableCareOrganization)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.AdditionalClinicalInfo)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ApplicationType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactId).HasColumnName("ContactID");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("createdBy");
            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasColumnName("createdDate");
            entity.Property(e => e.Dosage)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DynamicDataListId).HasColumnName("DynamicDataListID");
            entity.Property(e => e.IndependentClinicalJudgement)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IndependentPracticeAssociation)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Infuse)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LookupDataListId).HasColumnName("LookupDataListID");
            entity.Property(e => e.ModifiedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("modifiedBy");
            entity.Property(e => e.ModifiedDate)
                .HasColumnType("datetime")
                .HasColumnName("modifiedDate");
            entity.Property(e => e.OrgAddressId).HasColumnName("OrgAddressID");
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.OtherPrescriptionInfo)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PafTblFileIds)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("PafTblFileIDs");
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.PatientEligibityInfo)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientIncomeInfo)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.PatientSavingProgramInfo)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.PatientWeight)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PbmbinNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMBinNumber");
            entity.Property(e => e.PbmcardholderName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMCardholderName");
            entity.Property(e => e.Pbmdob)
                .HasColumnType("datetime")
                .HasColumnName("PBMDOB");
            entity.Property(e => e.PbmgroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMGroupNumber");
            entity.Property(e => e.PbminsurerName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMInsurerName");
            entity.Property(e => e.Pbmpcn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMPCN");
            entity.Property(e => e.Pbmphone)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMPhone");
            entity.Property(e => e.PbmpolicyNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMPolicyNumber");
            entity.Property(e => e.PendingSrshortDescs)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PendingSRShortDescs");
            entity.Property(e => e.PendingSrsubTypeListIds)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PendingSRSubTypeListIds");
            entity.Property(e => e.PendingSrtypeListIds)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PendingSRTypeListIDs");
            entity.Property(e => e.PharmacyFax)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyPhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.PrescriberName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriberSignature)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryCardholderName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryDob)
                .HasColumnType("datetime")
                .HasColumnName("PrimaryDOB");
            entity.Property(e => e.PrimaryGroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryIcddiagnosis)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PrimaryICDDiagnosis");
            entity.Property(e => e.PrimaryInsurerName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryPhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryPolicyNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Quantity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Refills)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryCardholderName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryDob)
                .HasColumnType("datetime")
                .HasColumnName("SecondaryDOB");
            entity.Property(e => e.SecondaryGroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryIcddiagnosis)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SecondaryICDDiagnosis");
            entity.Property(e => e.SecondaryInsurerName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryPhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryPolicyNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.SrSubTypeListIds)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("SR_SubTypeListIDs");
            entity.Property(e => e.SrtypeListIds)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SRTypeListIDs");
            entity.Property(e => e.SrtypeShortDesc)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SRTypeShortDesc");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TblFilesIds)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("TblFilesIDs");
            entity.Property(e => e.TreatingOrgAddressId).HasColumnName("TreatingOrgAddressID");
            entity.Property(e => e.TreatingPracticeInfo)
                .HasMaxLength(1000)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PortalStagingHcpSr> entity);
    }
}
