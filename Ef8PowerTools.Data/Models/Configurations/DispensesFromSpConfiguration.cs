// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DispensesFromSpConfiguration : IEntityTypeConfiguration<DispensesFromSp>
    {
        public void Configure(EntityTypeBuilder<DispensesFromSp> entity)
        {
            entity
                .HasNoKey()
                .ToTable("Dispenses_fromSP");

            entity.Property(e => e.Binnumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BINNumber");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getutcdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DispenseFromSpid)
                .ValueGeneratedOnAdd()
                .HasColumnName("Dispense_fromSPID");
            entity.Property(e => e.ExternalPatientId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ExternalPatientID");
            entity.Property(e => e.FillNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.GroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Icdcode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ICDCode");
            entity.Property(e => e.ItemName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LifeTimeMax).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.MajorMedicalName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MaxOop)
                .HasColumnType("decimal(8, 2)")
                .HasColumnName("MaxOOP");
            entity.Property(e => e.Ndc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NDC");
            entity.Property(e => e.OrderTransactionNum)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OrderType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.PaitentOop)
                .HasColumnType("numeric(8, 2)")
                .HasColumnName("PaitentOOP");
            entity.Property(e => e.PatientCopay).HasColumnType("numeric(8, 2)");
            entity.Property(e => e.PatientDob).HasColumnName("PatientDOB");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientOkleavePhoneMsg).HasColumnName("PatientOKLeavePhoneMsg");
            entity.Property(e => e.PatientWeight).HasColumnType("numeric(8, 2)");
            entity.Property(e => e.Pbmname)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PBMName");
            entity.Property(e => e.Pcnnumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PCNNumber");
            entity.Property(e => e.PhysicianAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.PhysicianLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianMiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianSuffix)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianZip)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PlanMax).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.PrescriberNpi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PrescriberNPI");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Quantity).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.ReferredBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RefillRemaining).HasColumnType("decimal(8, 0)");
            entity.Property(e => e.ShippingCarrier)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Spid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SPID");
            entity.Property(e => e.Spnpi)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SPNPI");
            entity.Property(e => e.SpprescriberId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SPPrescriberID");
            entity.Property(e => e.TrackingNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UnitOfMeasure)
                .HasMaxLength(50)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DispensesFromSp> entity);
    }
}
