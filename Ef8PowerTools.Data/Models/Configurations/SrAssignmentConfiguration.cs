// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrAssignmentConfiguration : IEntityTypeConfiguration<SrAssignment>
    {
        public void Configure(EntityTypeBuilder<SrAssignment> entity)
        {
            entity.ToTable("SR_Assignments");

            entity.HasIndex(e => new { e.ServiceRequestId, e.ProgramId, e.Deleted, e.Rank }, "<IX_SR_Assignments>");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted }, "IX_SR_Assignments_Program");

            entity.Property(e => e.SrAssignmentId).HasColumnName("SR_AssignmentID");
            entity.Property(e => e.AssignmentType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.UserGroupId).HasColumnName("UserGroupID");
            entity.Property(e => e.UserName)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.ServiceRequest).WithMany(p => p.SrAssignments)
                .HasForeignKey(d => d.ServiceRequestId)
                .HasConstraintName("FK_SR_Assignments_ServiceRequests");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrAssignment> entity);
    }
}
