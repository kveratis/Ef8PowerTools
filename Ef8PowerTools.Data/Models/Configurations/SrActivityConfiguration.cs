// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrActivityConfiguration : IEntityTypeConfiguration<SrActivity>
    {
        public void Configure(EntityTypeBuilder<SrActivity> entity)
        {
            entity.ToTable("SR_Activities");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted }, "IX_SR_Activities_1");

            entity.HasIndex(e => new { e.ProgramId, e.SrActivityListId, e.Deleted }, "SR_Activities_withCreated");

            entity.HasIndex(e => e.ServiceRequestId, "ServiceRequestID");

            entity.Property(e => e.SrActivityId).HasColumnName("SR_ActivityID");
            entity.Property(e => e.ActivityDate).HasColumnType("datetime");
            entity.Property(e => e.CallerType)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CallerTypeId).HasColumnName("CallerTypeID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DaysOnHand)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Ibobcall)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("IBOBCall");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.ReasonForCall)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ReasonForCallId).HasColumnName("ReasonForCallID");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.SrActivityListId).HasColumnName("SR_ActivityListID");
            entity.Property(e => e.SrNoteId).HasColumnName("SR_NoteID");

            entity.HasOne(d => d.ServiceRequest).WithMany(p => p.SrActivities)
                .HasForeignKey(d => d.ServiceRequestId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_Activities_ServiceRequests");

            entity.HasOne(d => d.SrActivityList).WithMany(p => p.SrActivities)
                .HasForeignKey(d => d.SrActivityListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_Activities_SR_ActivityList");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrActivity> entity);
    }
}
