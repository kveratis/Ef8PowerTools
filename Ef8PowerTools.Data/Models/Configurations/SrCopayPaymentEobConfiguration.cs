// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrCopayPaymentEobConfiguration : IEntityTypeConfiguration<SrCopayPaymentEob>
    {
        public void Configure(EntityTypeBuilder<SrCopayPaymentEob> entity)
        {
            entity.ToTable("SR_CopayPaymentEOB");

            entity.Property(e => e.SrCopayPaymentEobid).HasColumnName("SR_CopayPaymentEOBID");
            entity.Property(e => e.BillingCode)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ClaimTypeAmount).HasColumnType("money");
            entity.Property(e => e.ClaimTypeDate).HasColumnType("datetime");
            entity.Property(e => e.CopayCardId)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CopayCardID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EfOverrideBisrid).HasColumnName("EF_Override_BISRID");
            entity.Property(e => e.EfOverrideDate).HasColumnName("EF_Override_Date");
            entity.Property(e => e.EfOverrideExpirationDate).HasColumnName("EF_Override_ExpirationDate");
            entity.Property(e => e.EfOverrideNotes)
                .HasMaxLength(350)
                .IsUnicode(false)
                .HasColumnName("EF_Override_Notes");
            entity.Property(e => e.EfOverrideReason)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EF_Override_Reason");
            entity.Property(e => e.EoblineStatus)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("EOBLineStatus");
            entity.Property(e => e.EobreceivedDate).HasColumnName("EOBReceivedDate");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OriginalBilledAmount).HasColumnType("money");
            entity.Property(e => e.PatientCopayAmount).HasColumnType("money");
            entity.Property(e => e.PatientDueAmount).HasColumnType("money");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PayeeId).HasColumnName("PayeeID");
            entity.Property(e => e.PayeeType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PayerMessage)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryPlanPaidAmount).HasColumnType("money");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.Quantity).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ServiceRequestId).HasColumnName("ServiceRequestID");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StatusUpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.TotalApprovedAmount).HasColumnType("money");
            entity.Property(e => e.TotalCopayRequestedAmount).HasColumnType("money");
            entity.Property(e => e.TotalDueAmount).HasColumnType("money");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrCopayPaymentEob> entity);
    }
}
