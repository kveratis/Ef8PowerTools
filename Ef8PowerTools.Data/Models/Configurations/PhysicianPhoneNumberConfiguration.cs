// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PhysicianPhoneNumberConfiguration : IEntityTypeConfiguration<PhysicianPhoneNumber>
    {
        public void Configure(EntityTypeBuilder<PhysicianPhoneNumber> entity)
        {
            entity.ToTable(tb =>
                {
                    tb.HasTrigger("Tr_PhysicianPhoneNumbers_Audit_Delete");
                    tb.HasTrigger("Tr_PhysicianPhoneNumbers_Audit_Insert");
                    tb.HasTrigger("Tr_PhysicianPhoneNumbers_Audit_Update");
                });

            entity.Property(e => e.PhysicianPhoneNumberId).HasColumnName("PhysicianPhoneNumberID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Extension)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdate).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhoneComments)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhoneType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");

            entity.HasOne(d => d.Physician).WithMany(p => p.PhysicianPhoneNumbers)
                .HasForeignKey(d => d.PhysicianId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PhysicianPhoneNumbers_Physicians");

            entity.HasOne(d => d.Program).WithMany(p => p.PhysicianPhoneNumbers)
                .HasForeignKey(d => d.ProgramId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PhysicianPhoneNumbers_Programs");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PhysicianPhoneNumber> entity);
    }
}
