// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class EnrollmentConfiguration : IEntityTypeConfiguration<Enrollment>
    {
        public void Configure(EntityTypeBuilder<Enrollment> entity)
        {
            entity.HasKey(e => e.EnrollmentId).HasName("Pk_Enrollment_EnrollmentID");

            entity.ToTable("Enrollment");

            entity.Property(e => e.EnrollmentId).HasColumnName("EnrollmentID");
            entity.Property(e => e.AdditionalDocumentsName)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.AdministrationInformation)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AdministrationInformationFormName)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverEmail)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverHomePhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverMiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverMobilePhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CaregiverRelationship)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.CaremetxRecordId)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("CaremetxRecordID");
            entity.Property(e => e.CaremetxRecordType)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalAllergies)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalAscvdtext)
                .HasMaxLength(200)
                .HasColumnName("ClinicalASCVDText");
            entity.Property(e => e.ClinicalBillingPreference)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalContraindications)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalCptcode1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ClinicalCPTCode1");
            entity.Property(e => e.ClinicalCptcode2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ClinicalCPTCode2");
            entity.Property(e => e.ClinicalCptcode3)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ClinicalCPTCode3");
            entity.Property(e => e.ClinicalCptcode4)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ClinicalCPTCode4");
            entity.Property(e => e.ClinicalCptcode5)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ClinicalCPTCode5");
            entity.Property(e => e.ClinicalHeFhtext)
                .HasMaxLength(200)
                .HasColumnName("ClinicalHeFHText");
            entity.Property(e => e.ClinicalOtherText).HasMaxLength(200);
            entity.Property(e => e.ClinicalPreviousTreatment)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalPreviousTreatment1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalPreviousTreatment2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalPreviousTreatmentDose)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalPreviousTreatmentDose1)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalPreviousTreatmentDose2)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalPreviousTreatmentFrequency)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalPreviousTreatmentFrequency1)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalPreviousTreatmentFrequency2)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalVisualAcuityLeftEye)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ClinicalVisualAcuityRightEye)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CommercialPrivateInsurance).HasColumnName("Commercial/PrivateInsurance");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DiagnosisCodes)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DiagnosisCodesSecondary)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DiagnosisCodesTertiary)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DiagnosisDescription).HasMaxLength(1000);
            entity.Property(e => e.DrugId).HasColumnName("DrugID");
            entity.Property(e => e.ElectronicAttestationPatientEmail)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ElectronicAttestationPatientPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EnrollmentType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityCity)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.FacilityId).HasColumnName("FacilityID");
            entity.Property(e => e.FacilityName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityNpi)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.FacilityOfficeContactFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityOfficeContactLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FacilityOfficeContactPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.FacilityState)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.FacilityTaxId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("FacilityTaxID");
            entity.Property(e => e.FacilityZip)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("FacilityZIP");
            entity.Property(e => e.GroupNumber)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.HasAscvd).HasColumnName("HasASCVD");
            entity.Property(e => e.HasAscvsorHeFh).HasColumnName("HasASCVSorHeFH");
            entity.Property(e => e.HasHeFh).HasColumnName("HasHeFH");
            entity.Property(e => e.InsuranceCardName)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.InsuranceId).HasColumnName("InsuranceID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ManualAttestationFileName)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.MedicalBeneficiaryId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("MedicalBeneficiaryID");
            entity.Property(e => e.OfficeContactEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OfficeContactEMail");
            entity.Property(e => e.OfficeContactFax)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OfficeContactFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OfficeContactLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OfficeContactPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationAddressId).HasColumnName("OrganizationAddressID");
            entity.Property(e => e.OrganizationEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.OtherCardHolderId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("OtherCardHolderID");
            entity.Property(e => e.OtherDiagnosisCodes)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OtherGroupNumber)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.OtherInsurance)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.OtherPhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.OtherPlanName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.OtherPolicyHolderName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientAddressId).HasColumnName("PatientAddressID");
            entity.Property(e => e.PatientAttestationId).HasColumnName("PatientAttestationID");
            entity.Property(e => e.PatientAttestationType)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PatientCity)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PatientCopayCardId)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("PatientCopayCardID");
            entity.Property(e => e.PatientDob).HasColumnName("PatientDOB");
            entity.Property(e => e.PatientEmail)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientGender)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PatientHomePhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PatientLast4Ssn)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("PatientLast4SSN");
            entity.Property(e => e.PatientLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientMiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientMobileNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PatientOtherLanguage)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientPreferredLanguage)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientPreferredPhone)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PatientState)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PatientZip)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("PatientZIP");
            entity.Property(e => e.PharmacyCardHolderId)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyName)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyOtherValue)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyPhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PharmacyPlanName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianCity)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianDea)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PhysicianDEA");
            entity.Property(e => e.PhysicianEmail)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianFaxNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianId).HasColumnName("PhysicianID");
            entity.Property(e => e.PhysicianLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianLicenseState)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianMiddleName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianNpi)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianOrganizationName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianOrganizationNpi)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianOrganizationTaxId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PhysicianOrganizationTaxID");
            entity.Property(e => e.PhysicianPhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianPtan)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PhysicianPTAN");
            entity.Property(e => e.PhysicianState)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianStateLicenseNumber)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.PhysicianTaxId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PhysicianTaxID");
            entity.Property(e => e.PhysicianZip)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("PhysicianZIP");
            entity.Property(e => e.PlaceOfService)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PolicyHolderName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PreferredMethodOfPayment)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Prescription15mg)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Prescription20mg)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionAdditionalNotes).IsUnicode(false);
            entity.Property(e => e.PrescriptionBsa)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("PrescriptionBSA");
            entity.Property(e => e.PrescriptionDirectionForUse).IsUnicode(false);
            entity.Property(e => e.PrescriptionDrugDescription)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionFixedDoseTablet)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionHeight)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionInitialDose)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionPhysicianSignatureType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionQuantity).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.PrescriptionQuantityUnitOfMeasure)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionSecondDose)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionSig)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("PrescriptionSIG");
            entity.Property(e => e.PrescriptionSig1)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("PrescriptionSIG1");
            entity.Property(e => e.PrescriptionTabletsPerCycle)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionTypedSignature)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PrescriptionWeight)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryCardHolderId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PrimaryCardHolderID");
            entity.Property(e => e.PrimaryEmployer)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryGroupNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryPhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryPlanName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryPolicyHolderName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimarySubscriberDob).HasColumnName("PrimarySubscriberDOB");
            entity.Property(e => e.PrimarySubscriberFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimarySubscriberLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PrimarySubscriberRelationshipToCardholder)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.RxBin)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("RxBIN");
            entity.Property(e => e.RxGroupNumber)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.RxPcn)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("RxPCN");
            entity.Property(e => e.SecondaryCardHolderId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SecondaryCardHolderID");
            entity.Property(e => e.SecondaryEmployer)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryGroupNumber)
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryMedicalSupplementPlanLetter)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryPhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryPlanName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SecondaryPolicyHolderName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondarySubscriberDob).HasColumnName("SecondarySubscriberDOB");
            entity.Property(e => e.SecondarySubscriberFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondarySubscriberLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SecondarySubscriberRelationshipToCardholder)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TreatingSiteContactName).HasMaxLength(200);
            entity.Property(e => e.TypedSignature)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.VaMilitary).HasColumnName("VA/Military");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Enrollment> entity);
    }
}
