// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class SrRxOffRampDatumConfiguration : IEntityTypeConfiguration<SrRxOffRampDatum>
    {
        public void Configure(EntityTypeBuilder<SrRxOffRampDatum> entity)
        {
            entity.HasKey(e => e.SrRxOffRampDataId).HasName("Pk_SR_RxOffRampData_SR_RxOffRampDataId");

            entity.ToTable("SR_RxOffRampData");

            entity.HasIndex(e => e.SrOffRampId, "UIDX_SR_RxOffRampData_SR_OffRampId").IsUnique();

            entity.Property(e => e.SrRxOffRampDataId).HasColumnName("SR_RxOffRampDataId");
            entity.Property(e => e.ActionRequired)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CaseId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DispositionCode)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ExternalPatientId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LocationAddress1)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LocationAddress2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LocationCity)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LocationId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.LocationId1)
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasColumnName("Location_Id");
            entity.Property(e => e.LocationMainFax)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.LocationMainPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.LocationName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LocationNpi)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.LocationState)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LocationTaxId)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LocationZipCode)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ManualBvId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.MbvPatientPhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("MBvPatientPhoneNumber");
            entity.Property(e => e.MbvPatientPhoneNumberType)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("MBvPatientPhoneNumberType");
            entity.Property(e => e.PatientDob).HasColumnType("datetime");
            entity.Property(e => e.PatientFirstName)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PatientGender)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.PatientLastName)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.PatientMedicareId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.PatientSsn)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PatientSSN");
            entity.Property(e => e.PatientZipCode)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PracticeAddress1)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.PracticeAddress2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PracticeCity)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PracticeId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.PracticeLegalName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PracticeLocationId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.PracticeMainFax)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PracticeMainPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.PracticeName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PracticeNpi)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PracticeOrganizationGroupExclusion)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PracticeOrganizationOrganizationName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PracticeState)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.PracticeTaxId)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PracticeZipCode)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ProviderFirstName)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.ProviderFullNameNpi)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.ProviderId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.ProviderLastName)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.ProviderNpi)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.ProviderPracticeProviderId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.ProviderProviderId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.ProviderState)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.ProviderTaxId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.RequestDate).HasColumnType("datetime");
            entity.Property(e => e.RequestOrganization)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RequestUserId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.ServicePbmPhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.ServiceProductDefaultQuantity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ServiceProductMethod)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ServiceProductName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ServiceProductNdc)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ServiceProductNDC");
            entity.Property(e => e.ServiceQuantity)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SrOffRampId).HasColumnName("SR_OffRampId");
            entity.Property(e => e.StatusDate).HasColumnType("datetime");
            entity.Property(e => e.UserEmail)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.UserFax)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.UserFirstName)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.UserId)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.UserLastName)
                .HasMaxLength(35)
                .IsUnicode(false);
            entity.Property(e => e.UserPhone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.UserPhoneType)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.SrOffRamp).WithOne(p => p.SrRxOffRampDatum)
                .HasForeignKey<SrRxOffRampDatum>(d => d.SrOffRampId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_SR_RXOffRampData_SR_OffRamp");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<SrRxOffRampDatum> entity);
    }
}
