// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DynamicDataListConfiguration : IEntityTypeConfiguration<DynamicDataList>
    {
        public void Configure(EntityTypeBuilder<DynamicDataList> entity)
        {
            entity.HasKey(e => e.DynamicDataListId).HasName("PK_DynamicData");

            entity.ToTable("DynamicDataList");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.Active }, "Program_Deleted_Include");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted }, "Program_Deleted_Include_All");

            entity.Property(e => e.DynamicDataListId).HasColumnName("DynamicDataListID");
            entity.Property(e => e.Active).HasDefaultValue(true);
            entity.Property(e => e.AdditionalInfo)
                .HasMaxLength(800)
                .IsUnicode(false);
            entity.Property(e => e.AllowNa).HasColumnName("AllowNA");
            entity.Property(e => e.AutoPopulate)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Category)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("mhu");
            entity.Property(e => e.CssClass)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.DataType)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.DescriptionCode)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.DrugName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FieldCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FieldLength)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FieldValidationMessage)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.FunctionName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LookUpDataListFunctionName)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.MaxValue)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MinValue)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");
            entity.Property(e => e.RegularExpression)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Required)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Script).IsUnicode(false);
            entity.Property(e => e.ShowCreateSr).HasColumnName("ShowCreateSR");
            entity.Property(e => e.SortOrder).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Srtype)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SRType");
            entity.Property(e => e.TemplateTagName).HasMaxLength(200);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DynamicDataList> entity);
    }
}
