// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class CoherusRosterStageConfiguration : IEntityTypeConfiguration<CoherusRosterStage>
    {
        public void Configure(EntityTypeBuilder<CoherusRosterStage> entity)
        {
            entity.ToTable("Coherus_Roster_Stage");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AlignmentCodeType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AreaCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AreaName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AssignmentEnd)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.AssignmentStart)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Company)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Country)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("(suser_sname())");
            entity.Property(e => e.DistrictCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DistrictName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field10)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field3)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field4)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field5)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field6)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field7)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field8)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Field9)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FileName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RegionCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RegionName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepAddress1)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepAddress2)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepEmail)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepFirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepLastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepLogin)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepMiddleInitial)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepPhone)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepState)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.RepZip)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TerritoryCode)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TerritoryName)
                .HasMaxLength(50)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<CoherusRosterStage> entity);
    }
}
