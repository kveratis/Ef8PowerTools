// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class PatientDynamicDatumConfiguration : IEntityTypeConfiguration<PatientDynamicDatum>
    {
        public void Configure(EntityTypeBuilder<PatientDynamicDatum> entity)
        {
            entity.HasKey(e => e.PatientDynamicDataId).HasName("PK_EntityDynamicData");

            entity.HasIndex(e => new { e.ProgramId, e.Deleted, e.PatientId }, "IX_PatientDynamicData_Program");

            entity.HasIndex(e => new { e.PatientId, e.ProgramId }, "PatientID_ProgramID");

            entity.HasIndex(e => new { e.PatientId, e.ProgramId, e.DynamicDataListId, e.Deleted }, "PatientID_ProgramID_DynamicDataListID_Deleted");

            entity.Property(e => e.PatientDynamicDataId).HasColumnName("PatientDynamicDataID");
            entity.Property(e => e.Answer)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AnswerId).HasColumnName("AnswerID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.DynamicDataListId).HasColumnName("DynamicDataListID");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.ProgramId).HasColumnName("ProgramID");

            entity.HasOne(d => d.DynamicDataList).WithMany(p => p.PatientDynamicData)
                .HasForeignKey(d => d.DynamicDataListId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EntityDynamicData_DynamicDataList");

            entity.HasOne(d => d.Patient).WithMany(p => p.PatientDynamicData)
                .HasForeignKey(d => d.PatientId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PatientDynamicData_Patients");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PatientDynamicDatum> entity);
    }
}
