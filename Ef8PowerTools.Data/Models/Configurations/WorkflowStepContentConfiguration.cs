// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class WorkflowStepContentConfiguration : IEntityTypeConfiguration<WorkflowStepContent>
    {
        public void Configure(EntityTypeBuilder<WorkflowStepContent> entity)
        {
            entity.HasKey(e => e.WorkflowStepContentId).HasName("Pk_WorkflowContent_WorkflowContentID");

            entity.ToTable("WorkflowStepContent", tb => tb.HasComment("Stores displayable content for workflow steps by content key where the lookup name is WORKFLOW_CONTENT"));

            entity.Property(e => e.WorkflowStepContentId)
                .ValueGeneratedNever()
                .HasComment("The primary key")
                .HasColumnName("WorkflowStepContentID");
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Createdby)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedby)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ProgramWorkflowStep).HasComment("The program workflow step in for which the content is to be displayed where the lookup name is WORKFLOW_STEPS");
            entity.Property(e => e.Value)
                .IsRequired()
                .HasComment("The html markup to display");
            entity.Property(e => e.WorkflowId)
                .HasComment("The parent workflow for a program and product")
                .HasColumnName("WorkflowID");

            entity.HasOne(d => d.ProgramWorkflowStepNavigation).WithMany(p => p.WorkflowStepContents)
                .HasForeignKey(d => d.ProgramWorkflowStep)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WorkflowStepContent_LookupItems_WorkflowStep");

            entity.HasOne(d => d.Workflow).WithMany(p => p.WorkflowStepContents)
                .HasForeignKey(d => d.WorkflowId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_WorkflowStepContent_Workflow");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<WorkflowStepContent> entity);
    }
}
