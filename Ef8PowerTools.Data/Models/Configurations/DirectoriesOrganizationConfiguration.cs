// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef8PowerTools.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef8PowerTools.Data.Models.Configurations
{
    public partial class DirectoriesOrganizationConfiguration : IEntityTypeConfiguration<DirectoriesOrganization>
    {
        public void Configure(EntityTypeBuilder<DirectoriesOrganization> entity)
        {
            entity
                .HasNoKey()
                .ToTable("Directories_Organizations");

            entity.HasIndex(e => e.OrganizationId, "IX_Directories_Organizations").IsUnique();

            entity.Property(e => e.ActiveEndTime).HasColumnType("datetime");
            entity.Property(e => e.ActiveStartTime).HasColumnType("datetime");
            entity.Property(e => e.AddressLine2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AddressLinel)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.AlternatePhoneNumbers)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.City)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CountryCode)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.CrossStreet)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Deanumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DEANumber");
            entity.Property(e => e.DirectAddress)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.DirectorySpecialtyName)
                .HasMaxLength(2000)
                .IsUnicode(false);
            entity.Property(e => e.ElectronicMail)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.FacilitylD)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Hin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("HIN");
            entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Latitude)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Longitude)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.MedicaidNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MedicareNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MutuallyDefined)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ncpdpid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NCPDPID");
            entity.Property(e => e.Npi)
                .HasMaxLength(35)
                .IsUnicode(false)
                .HasColumnName("NPI");
            entity.Property(e => e.OldServiceLevel)
                .HasMaxLength(5000)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationId).HasColumnName("OrganizationID");
            entity.Property(e => e.OrganizationName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.OrganizationType)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ParentOrganizationName).HasMaxLength(225);
            entity.Property(e => e.ParentOrganizationlD)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PartnerAccount)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PayerId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PayerID");
            entity.Property(e => e.PostalCode)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.Precise)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.PrimaryTelephone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RecordChange)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ReplaceNcpdpid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ReplaceNCPDPID");
            entity.Property(e => e.ServiceLevel)
                .HasMaxLength(2500)
                .IsUnicode(false);
            entity.Property(e => e.StandardizedAddressLine1)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.StandardizedAddressLine2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.StandardizedCity)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StandardizedPostal)
                .HasMaxLength(9)
                .IsUnicode(false);
            entity.Property(e => e.StandardizedStateProvince)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.StateLicenseNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StateProvince)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.StoreNumber)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Upin)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UPIN");
            entity.Property(e => e.UseCase)
                .HasMaxLength(2000)
                .IsUnicode(false);
            entity.Property(e => e.Version)
                .HasMaxLength(50)
                .IsUnicode(false);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<DirectoriesOrganization> entity);
    }
}
